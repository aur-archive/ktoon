Only in ktoon-0.9a-rev1613_new/3rdparty: Makefile
Only in ktoon-0.9a-rev1613_new/3rdparty/potrace: libpotrace.a
Only in ktoon-0.9a-rev1613_new/3rdparty/potrace: Makefile
Only in ktoon-0.9a-rev1613_new/3rdparty/quazip: libquazip.a
Only in ktoon-0.9a-rev1613_new/3rdparty/quazip: Makefile
Binary files ktoon-0.9a-rev1613/configure.tests/aspell/aspell and ktoon-0.9a-rev1613_new/configure.tests/aspell/aspell differ
Binary files ktoon-0.9a-rev1613/configure.tests/aspell/main.o and ktoon-0.9a-rev1613_new/configure.tests/aspell/main.o differ
diff -ur ktoon-0.9a-rev1613/configure.tests/aspell/Makefile ktoon-0.9a-rev1613_new/configure.tests/aspell/Makefile
--- ktoon-0.9a-rev1613/configure.tests/aspell/Makefile	2010-08-27 14:53:14.000000000 +0200
+++ ktoon-0.9a-rev1613_new/configure.tests/aspell/Makefile	2011-08-22 10:23:32.000000000 +0200
@@ -1,9 +1,9 @@
 #############################################################################
 # Makefile for building: aspell
-# Generated by qmake (2.01a) (Qt 4.6.2) on: vie ago 27 00:25:08 2010
+# Generated by qmake (2.01a) (Qt 4.7.3) on: Mon Aug 22 10:23:27 2011
 # Project:  aspell.pro
 # Template: app
-# Command: /usr/bin/qmake -unix INCLUDEPATH\ +=\  LIBS\ +=\ \ -laspell -o Makefile aspell.pro
+# Command: /usr/bin/qmake INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\ -laspell -o Makefile aspell.pro
 #############################################################################
 
 ####### Compiler, tools and options
@@ -11,12 +11,12 @@
 CC            = gcc
 CXX           = g++
 DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
-CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
-CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
-INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
+CFLAGS        = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
+CXXFLAGS      = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
+INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
 LINK          = g++
-LFLAGS        = -Wl,-O1
-LIBS          = $(SUBLIBS)  -L/usr/lib -laspell -lQtGui -lQtCore -lpthread 
+LFLAGS        = -m64 -Wl,--hash-style=gnu -Wl,--as-needed -Wl,-O1
+LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/lib64 -laspell -lQtGui -lQtCore -lpthread 
 AR            = ar cqs
 RANLIB        = 
 QMAKE         = /usr/bin/qmake
@@ -45,25 +45,27 @@
 
 SOURCES       = main.cpp 
 OBJECTS       = main.o
-DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
-		/usr/share/qt4/mkspecs/common/unix.conf \
-		/usr/share/qt4/mkspecs/common/linux.conf \
-		/usr/share/qt4/mkspecs/qconfig.pri \
-		/usr/share/qt4/mkspecs/features/qt_functions.prf \
-		/usr/share/qt4/mkspecs/features/qt_config.prf \
-		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
-		/usr/share/qt4/mkspecs/features/default_pre.prf \
-		/usr/share/qt4/mkspecs/features/release.prf \
-		/usr/share/qt4/mkspecs/features/default_post.prf \
-		/usr/share/qt4/mkspecs/features/warn_on.prf \
-		/usr/share/qt4/mkspecs/features/qt.prf \
-		/usr/share/qt4/mkspecs/features/unix/thread.prf \
-		/usr/share/qt4/mkspecs/features/moc.prf \
-		/usr/share/qt4/mkspecs/features/resources.prf \
-		/usr/share/qt4/mkspecs/features/uic.prf \
-		/usr/share/qt4/mkspecs/features/yacc.prf \
-		/usr/share/qt4/mkspecs/features/lex.prf \
-		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
+DIST          = /usr/share/qt/mkspecs/common/g++.conf \
+		/usr/share/qt/mkspecs/common/unix.conf \
+		/usr/share/qt/mkspecs/common/linux.conf \
+		/usr/share/qt/mkspecs/qconfig.pri \
+		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
+		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
+		/usr/share/qt/mkspecs/features/qt_functions.prf \
+		/usr/share/qt/mkspecs/features/qt_config.prf \
+		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
+		/usr/share/qt/mkspecs/features/default_pre.prf \
+		/usr/share/qt/mkspecs/features/release.prf \
+		/usr/share/qt/mkspecs/features/default_post.prf \
+		/usr/share/qt/mkspecs/features/warn_on.prf \
+		/usr/share/qt/mkspecs/features/qt.prf \
+		/usr/share/qt/mkspecs/features/unix/thread.prf \
+		/usr/share/qt/mkspecs/features/moc.prf \
+		/usr/share/qt/mkspecs/features/resources.prf \
+		/usr/share/qt/mkspecs/features/uic.prf \
+		/usr/share/qt/mkspecs/features/yacc.prf \
+		/usr/share/qt/mkspecs/features/lex.prf \
+		/usr/share/qt/mkspecs/features/include_source_dir.prf \
 		aspell.pro
 QMAKE_TARGET  = aspell
 DESTDIR       = 
@@ -96,51 +98,55 @@
 $(TARGET):  $(OBJECTS)  
 	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
 
-Makefile: aspell.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
-		/usr/share/qt4/mkspecs/common/unix.conf \
-		/usr/share/qt4/mkspecs/common/linux.conf \
-		/usr/share/qt4/mkspecs/qconfig.pri \
-		/usr/share/qt4/mkspecs/features/qt_functions.prf \
-		/usr/share/qt4/mkspecs/features/qt_config.prf \
-		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
-		/usr/share/qt4/mkspecs/features/default_pre.prf \
-		/usr/share/qt4/mkspecs/features/release.prf \
-		/usr/share/qt4/mkspecs/features/default_post.prf \
-		/usr/share/qt4/mkspecs/features/warn_on.prf \
-		/usr/share/qt4/mkspecs/features/qt.prf \
-		/usr/share/qt4/mkspecs/features/unix/thread.prf \
-		/usr/share/qt4/mkspecs/features/moc.prf \
-		/usr/share/qt4/mkspecs/features/resources.prf \
-		/usr/share/qt4/mkspecs/features/uic.prf \
-		/usr/share/qt4/mkspecs/features/yacc.prf \
-		/usr/share/qt4/mkspecs/features/lex.prf \
-		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
+Makefile: aspell.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
+		/usr/share/qt/mkspecs/common/unix.conf \
+		/usr/share/qt/mkspecs/common/linux.conf \
+		/usr/share/qt/mkspecs/qconfig.pri \
+		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
+		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
+		/usr/share/qt/mkspecs/features/qt_functions.prf \
+		/usr/share/qt/mkspecs/features/qt_config.prf \
+		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
+		/usr/share/qt/mkspecs/features/default_pre.prf \
+		/usr/share/qt/mkspecs/features/release.prf \
+		/usr/share/qt/mkspecs/features/default_post.prf \
+		/usr/share/qt/mkspecs/features/warn_on.prf \
+		/usr/share/qt/mkspecs/features/qt.prf \
+		/usr/share/qt/mkspecs/features/unix/thread.prf \
+		/usr/share/qt/mkspecs/features/moc.prf \
+		/usr/share/qt/mkspecs/features/resources.prf \
+		/usr/share/qt/mkspecs/features/uic.prf \
+		/usr/share/qt/mkspecs/features/yacc.prf \
+		/usr/share/qt/mkspecs/features/lex.prf \
+		/usr/share/qt/mkspecs/features/include_source_dir.prf \
 		/usr/lib/libQtGui.prl \
 		/usr/lib/libQtCore.prl
-	$(QMAKE) -unix INCLUDEPATH\ +=\  LIBS\ +=\ \ -laspell -o Makefile aspell.pro
-/usr/share/qt4/mkspecs/common/g++.conf:
-/usr/share/qt4/mkspecs/common/unix.conf:
-/usr/share/qt4/mkspecs/common/linux.conf:
-/usr/share/qt4/mkspecs/qconfig.pri:
-/usr/share/qt4/mkspecs/features/qt_functions.prf:
-/usr/share/qt4/mkspecs/features/qt_config.prf:
-/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
-/usr/share/qt4/mkspecs/features/default_pre.prf:
-/usr/share/qt4/mkspecs/features/release.prf:
-/usr/share/qt4/mkspecs/features/default_post.prf:
-/usr/share/qt4/mkspecs/features/warn_on.prf:
-/usr/share/qt4/mkspecs/features/qt.prf:
-/usr/share/qt4/mkspecs/features/unix/thread.prf:
-/usr/share/qt4/mkspecs/features/moc.prf:
-/usr/share/qt4/mkspecs/features/resources.prf:
-/usr/share/qt4/mkspecs/features/uic.prf:
-/usr/share/qt4/mkspecs/features/yacc.prf:
-/usr/share/qt4/mkspecs/features/lex.prf:
-/usr/share/qt4/mkspecs/features/include_source_dir.prf:
+	$(QMAKE) INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\ -laspell -o Makefile aspell.pro
+/usr/share/qt/mkspecs/common/g++.conf:
+/usr/share/qt/mkspecs/common/unix.conf:
+/usr/share/qt/mkspecs/common/linux.conf:
+/usr/share/qt/mkspecs/qconfig.pri:
+/usr/share/qt/mkspecs/modules/qt_phonon.pri:
+/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
+/usr/share/qt/mkspecs/features/qt_functions.prf:
+/usr/share/qt/mkspecs/features/qt_config.prf:
+/usr/share/qt/mkspecs/features/exclusive_builds.prf:
+/usr/share/qt/mkspecs/features/default_pre.prf:
+/usr/share/qt/mkspecs/features/release.prf:
+/usr/share/qt/mkspecs/features/default_post.prf:
+/usr/share/qt/mkspecs/features/warn_on.prf:
+/usr/share/qt/mkspecs/features/qt.prf:
+/usr/share/qt/mkspecs/features/unix/thread.prf:
+/usr/share/qt/mkspecs/features/moc.prf:
+/usr/share/qt/mkspecs/features/resources.prf:
+/usr/share/qt/mkspecs/features/uic.prf:
+/usr/share/qt/mkspecs/features/yacc.prf:
+/usr/share/qt/mkspecs/features/lex.prf:
+/usr/share/qt/mkspecs/features/include_source_dir.prf:
 /usr/lib/libQtGui.prl:
 /usr/lib/libQtCore.prl:
 qmake:  FORCE
-	@$(QMAKE) -unix INCLUDEPATH\ +=\  LIBS\ +=\ \ -laspell -o Makefile aspell.pro
+	@$(QMAKE) INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\ -laspell -o Makefile aspell.pro
 
 dist: 
 	@$(CHK_DIR_EXISTS) .tmp/aspell1.0.0 || $(MKDIR) .tmp/aspell1.0.0 
@@ -159,6 +165,8 @@
 	-$(DEL_FILE) Makefile
 
 
+check: first
+
 mocclean: compiler_moc_header_clean compiler_moc_source_clean
 
 mocables: compiler_moc_header_make_all compiler_moc_source_make_all
Binary files ktoon-0.9a-rev1613/configure.tests/ffmpeg/ffmpeg and ktoon-0.9a-rev1613_new/configure.tests/ffmpeg/ffmpeg differ
Binary files ktoon-0.9a-rev1613/configure.tests/ffmpeg/main.o and ktoon-0.9a-rev1613_new/configure.tests/ffmpeg/main.o differ
diff -ur ktoon-0.9a-rev1613/configure.tests/ffmpeg/Makefile ktoon-0.9a-rev1613_new/configure.tests/ffmpeg/Makefile
--- ktoon-0.9a-rev1613/configure.tests/ffmpeg/Makefile	2010-08-27 14:53:14.000000000 +0200
+++ ktoon-0.9a-rev1613_new/configure.tests/ffmpeg/Makefile	2011-08-22 10:23:32.000000000 +0200
@@ -1,9 +1,9 @@
 #############################################################################
 # Makefile for building: ffmpeg
-# Generated by qmake (2.01a) (Qt 4.6.2) on: vie ago 27 00:25:09 2010
+# Generated by qmake (2.01a) (Qt 4.7.3) on: Mon Aug 22 10:23:26 2011
 # Project:  ffmpeg.pro
 # Template: app
-# Command: /usr/bin/qmake -unix INCLUDEPATH\ +=\  LIBS\ +=\ \ -lavcodec\ -lavformat -o Makefile ffmpeg.pro
+# Command: /usr/bin/qmake INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\ -lavcodec\ -lavformat -o Makefile ffmpeg.pro
 #############################################################################
 
 ####### Compiler, tools and options
@@ -11,12 +11,12 @@
 CC            = gcc
 CXX           = g++
 DEFINES       = -D__STDC_CONSTANT_MACROS -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
-CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
-CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
-INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
+CFLAGS        = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
+CXXFLAGS      = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
+INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I. -I.
 LINK          = g++
-LFLAGS        = -Wl,-O1
-LIBS          = $(SUBLIBS)  -L/usr/lib -lavformat -lavcodec -lQtGui -lQtCore -lpthread 
+LFLAGS        = -m64 -Wl,--hash-style=gnu -Wl,--as-needed -Wl,-O1
+LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/lib64 -lavformat -lavcodec -lQtGui -lQtCore -lpthread 
 AR            = ar cqs
 RANLIB        = 
 QMAKE         = /usr/bin/qmake
@@ -45,25 +45,27 @@
 
 SOURCES       = main.cpp 
 OBJECTS       = main.o
-DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
-		/usr/share/qt4/mkspecs/common/unix.conf \
-		/usr/share/qt4/mkspecs/common/linux.conf \
-		/usr/share/qt4/mkspecs/qconfig.pri \
-		/usr/share/qt4/mkspecs/features/qt_functions.prf \
-		/usr/share/qt4/mkspecs/features/qt_config.prf \
-		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
-		/usr/share/qt4/mkspecs/features/default_pre.prf \
-		/usr/share/qt4/mkspecs/features/release.prf \
-		/usr/share/qt4/mkspecs/features/default_post.prf \
-		/usr/share/qt4/mkspecs/features/warn_on.prf \
-		/usr/share/qt4/mkspecs/features/qt.prf \
-		/usr/share/qt4/mkspecs/features/unix/thread.prf \
-		/usr/share/qt4/mkspecs/features/moc.prf \
-		/usr/share/qt4/mkspecs/features/resources.prf \
-		/usr/share/qt4/mkspecs/features/uic.prf \
-		/usr/share/qt4/mkspecs/features/yacc.prf \
-		/usr/share/qt4/mkspecs/features/lex.prf \
-		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
+DIST          = /usr/share/qt/mkspecs/common/g++.conf \
+		/usr/share/qt/mkspecs/common/unix.conf \
+		/usr/share/qt/mkspecs/common/linux.conf \
+		/usr/share/qt/mkspecs/qconfig.pri \
+		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
+		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
+		/usr/share/qt/mkspecs/features/qt_functions.prf \
+		/usr/share/qt/mkspecs/features/qt_config.prf \
+		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
+		/usr/share/qt/mkspecs/features/default_pre.prf \
+		/usr/share/qt/mkspecs/features/release.prf \
+		/usr/share/qt/mkspecs/features/default_post.prf \
+		/usr/share/qt/mkspecs/features/warn_on.prf \
+		/usr/share/qt/mkspecs/features/qt.prf \
+		/usr/share/qt/mkspecs/features/unix/thread.prf \
+		/usr/share/qt/mkspecs/features/moc.prf \
+		/usr/share/qt/mkspecs/features/resources.prf \
+		/usr/share/qt/mkspecs/features/uic.prf \
+		/usr/share/qt/mkspecs/features/yacc.prf \
+		/usr/share/qt/mkspecs/features/lex.prf \
+		/usr/share/qt/mkspecs/features/include_source_dir.prf \
 		ffmpeg.pro
 QMAKE_TARGET  = ffmpeg
 DESTDIR       = 
@@ -96,51 +98,55 @@
 $(TARGET):  $(OBJECTS)  
 	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
 
-Makefile: ffmpeg.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
-		/usr/share/qt4/mkspecs/common/unix.conf \
-		/usr/share/qt4/mkspecs/common/linux.conf \
-		/usr/share/qt4/mkspecs/qconfig.pri \
-		/usr/share/qt4/mkspecs/features/qt_functions.prf \
-		/usr/share/qt4/mkspecs/features/qt_config.prf \
-		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
-		/usr/share/qt4/mkspecs/features/default_pre.prf \
-		/usr/share/qt4/mkspecs/features/release.prf \
-		/usr/share/qt4/mkspecs/features/default_post.prf \
-		/usr/share/qt4/mkspecs/features/warn_on.prf \
-		/usr/share/qt4/mkspecs/features/qt.prf \
-		/usr/share/qt4/mkspecs/features/unix/thread.prf \
-		/usr/share/qt4/mkspecs/features/moc.prf \
-		/usr/share/qt4/mkspecs/features/resources.prf \
-		/usr/share/qt4/mkspecs/features/uic.prf \
-		/usr/share/qt4/mkspecs/features/yacc.prf \
-		/usr/share/qt4/mkspecs/features/lex.prf \
-		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
+Makefile: ffmpeg.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
+		/usr/share/qt/mkspecs/common/unix.conf \
+		/usr/share/qt/mkspecs/common/linux.conf \
+		/usr/share/qt/mkspecs/qconfig.pri \
+		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
+		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
+		/usr/share/qt/mkspecs/features/qt_functions.prf \
+		/usr/share/qt/mkspecs/features/qt_config.prf \
+		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
+		/usr/share/qt/mkspecs/features/default_pre.prf \
+		/usr/share/qt/mkspecs/features/release.prf \
+		/usr/share/qt/mkspecs/features/default_post.prf \
+		/usr/share/qt/mkspecs/features/warn_on.prf \
+		/usr/share/qt/mkspecs/features/qt.prf \
+		/usr/share/qt/mkspecs/features/unix/thread.prf \
+		/usr/share/qt/mkspecs/features/moc.prf \
+		/usr/share/qt/mkspecs/features/resources.prf \
+		/usr/share/qt/mkspecs/features/uic.prf \
+		/usr/share/qt/mkspecs/features/yacc.prf \
+		/usr/share/qt/mkspecs/features/lex.prf \
+		/usr/share/qt/mkspecs/features/include_source_dir.prf \
 		/usr/lib/libQtGui.prl \
 		/usr/lib/libQtCore.prl
-	$(QMAKE) -unix INCLUDEPATH\ +=\  LIBS\ +=\ \ -lavcodec\ -lavformat -o Makefile ffmpeg.pro
-/usr/share/qt4/mkspecs/common/g++.conf:
-/usr/share/qt4/mkspecs/common/unix.conf:
-/usr/share/qt4/mkspecs/common/linux.conf:
-/usr/share/qt4/mkspecs/qconfig.pri:
-/usr/share/qt4/mkspecs/features/qt_functions.prf:
-/usr/share/qt4/mkspecs/features/qt_config.prf:
-/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
-/usr/share/qt4/mkspecs/features/default_pre.prf:
-/usr/share/qt4/mkspecs/features/release.prf:
-/usr/share/qt4/mkspecs/features/default_post.prf:
-/usr/share/qt4/mkspecs/features/warn_on.prf:
-/usr/share/qt4/mkspecs/features/qt.prf:
-/usr/share/qt4/mkspecs/features/unix/thread.prf:
-/usr/share/qt4/mkspecs/features/moc.prf:
-/usr/share/qt4/mkspecs/features/resources.prf:
-/usr/share/qt4/mkspecs/features/uic.prf:
-/usr/share/qt4/mkspecs/features/yacc.prf:
-/usr/share/qt4/mkspecs/features/lex.prf:
-/usr/share/qt4/mkspecs/features/include_source_dir.prf:
+	$(QMAKE) INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\ -lavcodec\ -lavformat -o Makefile ffmpeg.pro
+/usr/share/qt/mkspecs/common/g++.conf:
+/usr/share/qt/mkspecs/common/unix.conf:
+/usr/share/qt/mkspecs/common/linux.conf:
+/usr/share/qt/mkspecs/qconfig.pri:
+/usr/share/qt/mkspecs/modules/qt_phonon.pri:
+/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
+/usr/share/qt/mkspecs/features/qt_functions.prf:
+/usr/share/qt/mkspecs/features/qt_config.prf:
+/usr/share/qt/mkspecs/features/exclusive_builds.prf:
+/usr/share/qt/mkspecs/features/default_pre.prf:
+/usr/share/qt/mkspecs/features/release.prf:
+/usr/share/qt/mkspecs/features/default_post.prf:
+/usr/share/qt/mkspecs/features/warn_on.prf:
+/usr/share/qt/mkspecs/features/qt.prf:
+/usr/share/qt/mkspecs/features/unix/thread.prf:
+/usr/share/qt/mkspecs/features/moc.prf:
+/usr/share/qt/mkspecs/features/resources.prf:
+/usr/share/qt/mkspecs/features/uic.prf:
+/usr/share/qt/mkspecs/features/yacc.prf:
+/usr/share/qt/mkspecs/features/lex.prf:
+/usr/share/qt/mkspecs/features/include_source_dir.prf:
 /usr/lib/libQtGui.prl:
 /usr/lib/libQtCore.prl:
 qmake:  FORCE
-	@$(QMAKE) -unix INCLUDEPATH\ +=\  LIBS\ +=\ \ -lavcodec\ -lavformat -o Makefile ffmpeg.pro
+	@$(QMAKE) INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\ -lavcodec\ -lavformat -o Makefile ffmpeg.pro
 
 dist: 
 	@$(CHK_DIR_EXISTS) .tmp/ffmpeg1.0.0 || $(MKDIR) .tmp/ffmpeg1.0.0 
@@ -159,6 +165,8 @@
 	-$(DEL_FILE) Makefile
 
 
+check: first
+
 mocclean: compiler_moc_header_clean compiler_moc_source_clean
 
 mocables: compiler_moc_header_make_all compiler_moc_source_make_all
Binary files ktoon-0.9a-rev1613/configure.tests/opengl/main.o and ktoon-0.9a-rev1613_new/configure.tests/opengl/main.o differ
diff -ur ktoon-0.9a-rev1613/configure.tests/opengl/Makefile ktoon-0.9a-rev1613_new/configure.tests/opengl/Makefile
--- ktoon-0.9a-rev1613/configure.tests/opengl/Makefile	2010-08-27 14:53:14.000000000 +0200
+++ ktoon-0.9a-rev1613_new/configure.tests/opengl/Makefile	2011-08-22 10:23:32.000000000 +0200
@@ -1,9 +1,9 @@
 #############################################################################
 # Makefile for building: opengl
-# Generated by qmake (2.01a) (Qt 4.6.2) on: vie ago 27 00:25:11 2010
+# Generated by qmake (2.01a) (Qt 4.7.3) on: Mon Aug 22 10:23:28 2011
 # Project:  opengl.pro
 # Template: app
-# Command: /usr/bin/qmake -unix INCLUDEPATH\ +=\  LIBS\ +=\ \  -o Makefile opengl.pro
+# Command: /usr/bin/qmake INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\  -o Makefile opengl.pro
 #############################################################################
 
 ####### Compiler, tools and options
@@ -11,12 +11,12 @@
 CC            = gcc
 CXX           = g++
 DEFINES       = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
-CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
-CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
-INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I. -I/usr/X11R6/include -I.
+CFLAGS        = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
+CXXFLAGS      = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -fno-strict-aliasing -Wall -W -D_REENTRANT $(DEFINES)
+INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include -I. -I/usr/X11R6/include -I.
 LINK          = g++
-LFLAGS        = -Wl,-O1
-LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread 
+LFLAGS        = -m64 -Wl,--hash-style=gnu -Wl,--as-needed -Wl,-O1
+LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib64 -L/usr/lib64 -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread 
 AR            = ar cqs
 RANLIB        = 
 QMAKE         = /usr/bin/qmake
@@ -45,26 +45,28 @@
 
 SOURCES       = main.cpp 
 OBJECTS       = main.o
-DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
-		/usr/share/qt4/mkspecs/common/unix.conf \
-		/usr/share/qt4/mkspecs/common/linux.conf \
-		/usr/share/qt4/mkspecs/qconfig.pri \
-		/usr/share/qt4/mkspecs/features/qt_functions.prf \
-		/usr/share/qt4/mkspecs/features/qt_config.prf \
-		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
-		/usr/share/qt4/mkspecs/features/default_pre.prf \
-		/usr/share/qt4/mkspecs/features/release.prf \
-		/usr/share/qt4/mkspecs/features/default_post.prf \
-		/usr/share/qt4/mkspecs/features/warn_on.prf \
-		/usr/share/qt4/mkspecs/features/qt.prf \
-		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
-		/usr/share/qt4/mkspecs/features/unix/thread.prf \
-		/usr/share/qt4/mkspecs/features/moc.prf \
-		/usr/share/qt4/mkspecs/features/resources.prf \
-		/usr/share/qt4/mkspecs/features/uic.prf \
-		/usr/share/qt4/mkspecs/features/yacc.prf \
-		/usr/share/qt4/mkspecs/features/lex.prf \
-		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
+DIST          = /usr/share/qt/mkspecs/common/g++.conf \
+		/usr/share/qt/mkspecs/common/unix.conf \
+		/usr/share/qt/mkspecs/common/linux.conf \
+		/usr/share/qt/mkspecs/qconfig.pri \
+		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
+		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
+		/usr/share/qt/mkspecs/features/qt_functions.prf \
+		/usr/share/qt/mkspecs/features/qt_config.prf \
+		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
+		/usr/share/qt/mkspecs/features/default_pre.prf \
+		/usr/share/qt/mkspecs/features/release.prf \
+		/usr/share/qt/mkspecs/features/default_post.prf \
+		/usr/share/qt/mkspecs/features/warn_on.prf \
+		/usr/share/qt/mkspecs/features/qt.prf \
+		/usr/share/qt/mkspecs/features/unix/opengl.prf \
+		/usr/share/qt/mkspecs/features/unix/thread.prf \
+		/usr/share/qt/mkspecs/features/moc.prf \
+		/usr/share/qt/mkspecs/features/resources.prf \
+		/usr/share/qt/mkspecs/features/uic.prf \
+		/usr/share/qt/mkspecs/features/yacc.prf \
+		/usr/share/qt/mkspecs/features/lex.prf \
+		/usr/share/qt/mkspecs/features/include_source_dir.prf \
 		opengl.pro
 QMAKE_TARGET  = opengl
 DESTDIR       = 
@@ -97,55 +99,59 @@
 $(TARGET):  $(OBJECTS)  
 	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
 
-Makefile: opengl.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
-		/usr/share/qt4/mkspecs/common/unix.conf \
-		/usr/share/qt4/mkspecs/common/linux.conf \
-		/usr/share/qt4/mkspecs/qconfig.pri \
-		/usr/share/qt4/mkspecs/features/qt_functions.prf \
-		/usr/share/qt4/mkspecs/features/qt_config.prf \
-		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
-		/usr/share/qt4/mkspecs/features/default_pre.prf \
-		/usr/share/qt4/mkspecs/features/release.prf \
-		/usr/share/qt4/mkspecs/features/default_post.prf \
-		/usr/share/qt4/mkspecs/features/warn_on.prf \
-		/usr/share/qt4/mkspecs/features/qt.prf \
-		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
-		/usr/share/qt4/mkspecs/features/unix/thread.prf \
-		/usr/share/qt4/mkspecs/features/moc.prf \
-		/usr/share/qt4/mkspecs/features/resources.prf \
-		/usr/share/qt4/mkspecs/features/uic.prf \
-		/usr/share/qt4/mkspecs/features/yacc.prf \
-		/usr/share/qt4/mkspecs/features/lex.prf \
-		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
+Makefile: opengl.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
+		/usr/share/qt/mkspecs/common/unix.conf \
+		/usr/share/qt/mkspecs/common/linux.conf \
+		/usr/share/qt/mkspecs/qconfig.pri \
+		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
+		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
+		/usr/share/qt/mkspecs/features/qt_functions.prf \
+		/usr/share/qt/mkspecs/features/qt_config.prf \
+		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
+		/usr/share/qt/mkspecs/features/default_pre.prf \
+		/usr/share/qt/mkspecs/features/release.prf \
+		/usr/share/qt/mkspecs/features/default_post.prf \
+		/usr/share/qt/mkspecs/features/warn_on.prf \
+		/usr/share/qt/mkspecs/features/qt.prf \
+		/usr/share/qt/mkspecs/features/unix/opengl.prf \
+		/usr/share/qt/mkspecs/features/unix/thread.prf \
+		/usr/share/qt/mkspecs/features/moc.prf \
+		/usr/share/qt/mkspecs/features/resources.prf \
+		/usr/share/qt/mkspecs/features/uic.prf \
+		/usr/share/qt/mkspecs/features/yacc.prf \
+		/usr/share/qt/mkspecs/features/lex.prf \
+		/usr/share/qt/mkspecs/features/include_source_dir.prf \
 		/usr/lib/libQtOpenGL.prl \
 		/usr/lib/libQtGui.prl \
 		/usr/lib/libQtCore.prl
-	$(QMAKE) -unix INCLUDEPATH\ +=\  LIBS\ +=\ \  -o Makefile opengl.pro
-/usr/share/qt4/mkspecs/common/g++.conf:
-/usr/share/qt4/mkspecs/common/unix.conf:
-/usr/share/qt4/mkspecs/common/linux.conf:
-/usr/share/qt4/mkspecs/qconfig.pri:
-/usr/share/qt4/mkspecs/features/qt_functions.prf:
-/usr/share/qt4/mkspecs/features/qt_config.prf:
-/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
-/usr/share/qt4/mkspecs/features/default_pre.prf:
-/usr/share/qt4/mkspecs/features/release.prf:
-/usr/share/qt4/mkspecs/features/default_post.prf:
-/usr/share/qt4/mkspecs/features/warn_on.prf:
-/usr/share/qt4/mkspecs/features/qt.prf:
-/usr/share/qt4/mkspecs/features/unix/opengl.prf:
-/usr/share/qt4/mkspecs/features/unix/thread.prf:
-/usr/share/qt4/mkspecs/features/moc.prf:
-/usr/share/qt4/mkspecs/features/resources.prf:
-/usr/share/qt4/mkspecs/features/uic.prf:
-/usr/share/qt4/mkspecs/features/yacc.prf:
-/usr/share/qt4/mkspecs/features/lex.prf:
-/usr/share/qt4/mkspecs/features/include_source_dir.prf:
+	$(QMAKE) INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\  -o Makefile opengl.pro
+/usr/share/qt/mkspecs/common/g++.conf:
+/usr/share/qt/mkspecs/common/unix.conf:
+/usr/share/qt/mkspecs/common/linux.conf:
+/usr/share/qt/mkspecs/qconfig.pri:
+/usr/share/qt/mkspecs/modules/qt_phonon.pri:
+/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
+/usr/share/qt/mkspecs/features/qt_functions.prf:
+/usr/share/qt/mkspecs/features/qt_config.prf:
+/usr/share/qt/mkspecs/features/exclusive_builds.prf:
+/usr/share/qt/mkspecs/features/default_pre.prf:
+/usr/share/qt/mkspecs/features/release.prf:
+/usr/share/qt/mkspecs/features/default_post.prf:
+/usr/share/qt/mkspecs/features/warn_on.prf:
+/usr/share/qt/mkspecs/features/qt.prf:
+/usr/share/qt/mkspecs/features/unix/opengl.prf:
+/usr/share/qt/mkspecs/features/unix/thread.prf:
+/usr/share/qt/mkspecs/features/moc.prf:
+/usr/share/qt/mkspecs/features/resources.prf:
+/usr/share/qt/mkspecs/features/uic.prf:
+/usr/share/qt/mkspecs/features/yacc.prf:
+/usr/share/qt/mkspecs/features/lex.prf:
+/usr/share/qt/mkspecs/features/include_source_dir.prf:
 /usr/lib/libQtOpenGL.prl:
 /usr/lib/libQtGui.prl:
 /usr/lib/libQtCore.prl:
 qmake:  FORCE
-	@$(QMAKE) -unix INCLUDEPATH\ +=\  LIBS\ +=\ \  -o Makefile opengl.pro
+	@$(QMAKE) INCLUDEPATH\ +=\  LIBS\ +=\ -L/usr/lib64\  -o Makefile opengl.pro
 
 dist: 
 	@$(CHK_DIR_EXISTS) .tmp/opengl1.0.0 || $(MKDIR) .tmp/opengl1.0.0 
@@ -164,6 +170,8 @@
 	-$(DEL_FILE) Makefile
 
 
+check: first
+
 mocclean: compiler_moc_header_clean compiler_moc_source_clean
 
 mocables: compiler_moc_header_make_all compiler_moc_source_make_all
Binary files ktoon-0.9a-rev1613/configure.tests/opengl/opengl and ktoon-0.9a-rev1613_new/configure.tests/opengl/opengl differ
diff -ur ktoon-0.9a-rev1613/ktconfig.pri ktoon-0.9a-rev1613_new/ktconfig.pri
--- ktoon-0.9a-rev1613/ktconfig.pri	2010-08-27 14:53:14.000000000 +0200
+++ ktoon-0.9a-rev1613_new/ktconfig.pri	2011-08-22 10:23:30.000000000 +0200
@@ -1,10 +1,11 @@
-# Generated automatically at Fri Aug 27 00:25:14 -0500 2010! PLEASE DO NOT EDIT!
-INCLUDEPATH += /usr/include
-LIBS += -laspell -lavcodec -lavformat -lkgui -lkcore -lksound -lz -L/usr/lib
+# Generated automatically at 2011-08-22 10:23:30 +0200! PLEASE DO NOT EDIT!
+INCLUDEPATH += /home/martti/abs/kom/pkg/usr/include
+LIBS += -lavcodec -lavformat -laspell -lkgui -lkcore -lksound -lz -L/home/martti/abs/kom/pkg/usr/lib64
 QT += opengl core gui svg xml network
-DEFINES += HAVE_ASPELL HAVE_FFMPEG VERSION=\\\"0.9a\\\" CODE_NAME=\\\"Phoenix\\\" REVISION=\\\"1586\\\" K_DEBUG
+DEFINES += HAVE_FFMPEG HAVE_ASPELL VERSION=\\\"0.9a\\\" CODE_NAME=\\\"Phoenix\\\" REVISION=\\\"1613\\\" K_NODEBUG
 unix {
-    OBJECTS_DIR = .obj
-    UI_DIR = .ui
     MOC_DIR = .moc
+    UI_DIR = .ui
+    OBJECTS_DIR = .obj
 }
+CONFIG += silent
diff -ur ktoon-0.9a-rev1613/launcher/ktoon ktoon-0.9a-rev1613_new/launcher/ktoon
--- ktoon-0.9a-rev1613/launcher/ktoon	2010-08-27 14:53:14.000000000 +0200
+++ ktoon-0.9a-rev1613_new/launcher/ktoon	2011-08-22 10:23:26.000000000 +0200
@@ -1,10 +1,10 @@
 #!/bin/bash
 
-export KTOON_HOME="/usr/local/ktoon"
-export KTOON_SHARE="/usr/local/ktoon/share"
-export KTOON_LIB="/usr/local/ktoon/lib"
-export KTOON_INCLUDE="/usr/local/ktoon/include"
-export KTOON_BIN="/usr/local/ktoon/bin"
+export KTOON_HOME="/home/martti/abs/ktoon/pkg/usr"
+export KTOON_SHARE="/home/martti/abs/ktoon/pkg/usr/share"
+export KTOON_LIB="/home/martti/abs/ktoon/pkg/usr/lib"
+export KTOON_INCLUDE="/home/martti/abs/ktoon/pkg/usr/include"
+export KTOON_BIN="/home/martti/abs/ktoon/pkg/usr/bin"
 
 export LD_LIBRARY_PATH="${KTOON_LIB}:/usr/lib/kom/plugins:$LD_LIBRARY_PATH"
 
diff -ur ktoon-0.9a-rev1613/launcher/ktoon.desktop ktoon-0.9a-rev1613_new/launcher/ktoon.desktop
--- ktoon-0.9a-rev1613/launcher/ktoon.desktop	2010-08-27 14:53:14.000000000 +0200
+++ ktoon-0.9a-rev1613_new/launcher/ktoon.desktop	2011-08-22 10:23:26.000000000 +0200
@@ -4,7 +4,7 @@
 Name[es]=KTooN: Herramienta de Animación 2D
 Name[pt]=KTooN: Ferramenta de animação 2D
 Name[ru]=Редактор векторной анимации KTooN
-Exec=/usr/local/ktoon/bin/ktoon
+Exec=/home/martti/abs/ktoon/pkg/usr/bin/ktoon
 Icon=ktoon.png
 Type=Application
 MimeType=application/ktn;application/ktnet;
Only in ktoon-0.9a-rev1613_new: Makefile
Only in ktoon-0.9a-rev1613_new/qonf: komconfig.rb
Only in ktoon-0.9a-rev1613_new/src/components/animation: Makefile
Only in ktoon-0.9a-rev1613_new/src/components/colorpalette: Makefile
Only in ktoon-0.9a-rev1613_new/src/components/export: Makefile
diff -ur ktoon-0.9a-rev1613/src/components/exposure/ktexposuresheet.cpp ktoon-0.9a-rev1613_new/src/components/exposure/ktexposuresheet.cpp
--- ktoon-0.9a-rev1613/src/components/exposure/ktexposuresheet.cpp	2010-08-27 14:53:06.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/components/exposure/ktexposuresheet.cpp	2011-08-22 14:11:35.000000000 +0200
@@ -164,25 +164,25 @@
                {
                  int layer = k->currentTable->columnCount();
 
-                 KTProjectRequest event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(),
-                                                                               layer, KTProjectRequest::Add);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(),
+                                                                                layer, KTProjectRequest::Add);
+                 emit requestTriggered(event);
 
                  int framesNum = k->currentTable->usedFrames(k->currentTable->currentColumn());
 
                  for (int i=0;i < framesNum;i++) {
                       event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), layer, i, 
                                                                    KTProjectRequest::Add, QString());
-                      emit requestTriggered(&event);
+                      emit requestTriggered(event);
                  }
                }
                break;
             case KTProjectActionBar::RemoveLayer:
                {
-                 KTProjectRequest event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(), 
-                                                                               k->currentTable->currentLayer(), 
-                                                                               KTProjectRequest::Remove);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(), 
+                                                                                k->currentTable->currentLayer(), 
+                                                                                KTProjectRequest::Remove);
+                 emit requestTriggered(event);
                }
                break;
             case KTProjectActionBar::InsertFrame:
@@ -204,16 +204,16 @@
                      insertFrame(layer, k->currentTable->framesTotal());
                      
                      for (int index=lastFrame; index > k->currentTable->currentFrame(); index--) {
-                          KTProjectRequest event = KTRequestBuilder::createFrameRequest(scene,
-                                                   layer, index,
-                                                   KTProjectRequest::Move, index + 1);
-                          emit requestTriggered(&event);
+                          KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scene,
+                                                    layer, index,
+                                                    KTProjectRequest::Move, index + 1);
+                          emit requestTriggered(event);
                      }
 
-                     KTProjectRequest event = KTRequestBuilder::createFrameRequest(scene,
-                                              layer, target,
-                                              KTProjectRequest::Reset);
-                     emit requestTriggered(&event);
+                     KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scene,
+                                               layer, target,
+                                               KTProjectRequest::Reset);
+                     emit requestTriggered(event);
 
                      selectFrame(layer, target);
                  }
@@ -228,10 +228,10 @@
 
                  // SQA: Take care about the first frame case and paint a message on the workspace 
                  if (target == lastFrame) {
-                     KTProjectRequest event = KTRequestBuilder::createFrameRequest(scene, 
-                                              layer, target,
-                                              KTProjectRequest::Remove);
-                     emit requestTriggered(&event);
+                     KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scene, 
+                                               layer, target,
+                                               KTProjectRequest::Remove);
+                     emit requestTriggered(event);
                      if (target > 0)
                          selectFrame(layer, target-1);
                      else
@@ -239,33 +239,33 @@
                  } else {
                      // When the item deleted is not the last one
                      for (int index=target+1; index <= lastFrame; index++) {
-                          KTProjectRequest event = KTRequestBuilder::createFrameRequest(scene,
-                                                   layer, index,
-                                                   KTProjectRequest::Move, index - 1);
-                          emit requestTriggered(&event);
+                          KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scene,
+                                                    layer, index,
+                                                    KTProjectRequest::Move, index - 1);
+                          emit requestTriggered(event);
                      }
 
                      selectFrame(layer, target);
 
-                     KTProjectRequest request = KTRequestBuilder::createFrameRequest(scene, layer, lastFrame, KTProjectRequest::Remove);
-                     emit requestTriggered(&request);
+                     KTProjectRequest *request = KTRequestBuilder::createFrameRequest(scene, layer, lastFrame, KTProjectRequest::Remove);
+                     emit requestTriggered(request);
                  }
                }
                break;
             case KTProjectActionBar::MoveFrameUp:
                {
-                 KTProjectRequest event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
-                                          k->currentTable->currentLayer(), k->currentTable->currentFrame(),
-                                          KTProjectRequest::Exchange, k->currentTable->currentFrame()-1);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
+                                           k->currentTable->currentLayer(), k->currentTable->currentFrame(),
+                                           KTProjectRequest::Exchange, k->currentTable->currentFrame()-1);
+                 emit requestTriggered(event);
                }
                break;
             case KTProjectActionBar::MoveFrameDown:
                {
-                 KTProjectRequest event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
-                                          k->currentTable->currentLayer(), k->currentTable->currentFrame(),
-                                          KTProjectRequest::Exchange, k->currentTable->currentFrame()+1);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
+                                           k->currentTable->currentLayer(), k->currentTable->currentFrame(),
+                                           KTProjectRequest::Exchange, k->currentTable->currentFrame()+1);
+                 emit requestTriggered(event);
                }
                break;
             case KTProjectActionBar::LockFrame:
@@ -273,10 +273,10 @@
                  bool locked = k->currentTable->frameIsLocked(k->currentTable->currentColumn(), 
                                k->currentTable->currentFrame());
 
-                 KTProjectRequest event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
-                                          k->currentTable->currentLayer(), k->currentTable->currentFrame(),
-                                          KTProjectRequest::Lock, !locked);
-                                          emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
+                                           k->currentTable->currentLayer(), k->currentTable->currentFrame(),
+                                           KTProjectRequest::Lock, !locked);
+                 emit requestTriggered(event);
                }
                break;
     }
@@ -299,18 +299,18 @@
 void KTExposureSheet::emitRequestChangeScene(int index)
 {
     if (k->scenes->count() > 1) {
-        KTProjectRequest request = KTRequestBuilder::createSceneRequest(index, KTProjectRequest::Select);
-        emit localRequestTriggered(&request);
+        KTProjectRequest *request = KTRequestBuilder::createSceneRequest(index, KTProjectRequest::Select);
+        emit localRequestTriggered(request);
     }
 }
 
 void KTExposureSheet::emitRequestCopyCurrentFrame()
 {
-    KTProjectRequest request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
-                                                                    k->currentTable->currentLayer(), 
-                                                                    k->currentTable->currentFrame(), 
-                                                                    KTProjectRequest::Copy);
-    emit localRequestTriggered(&request);
+    KTProjectRequest *request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
+                                                                     k->currentTable->currentLayer(), 
+                                                                     k->currentTable->currentFrame(), 
+                                                                     KTProjectRequest::Copy);
+    emit localRequestTriggered(request);
 }
 
 void KTExposureSheet::emitRequestPasteInCurrentFrame()
@@ -323,27 +323,27 @@
             i <= k->currentTable->currentRow(); i++) {
             insertFrame(k->currentTable->currentLayer(), i);
 
-            KTProjectRequest request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
-                                                         k->currentTable->currentLayer(), i, 
-                                                         KTProjectRequest::Paste);
-            emit localRequestTriggered(&request);
+            KTProjectRequest *request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
+                                                          k->currentTable->currentLayer(), i, 
+                                                          KTProjectRequest::Paste);
+            emit localRequestTriggered(request);
         }
     } else {
-            KTProjectRequest request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
-                                                         k->currentTable->currentLayer(), 
-                                                         k->currentTable->currentFrame(),
-                                                         KTProjectRequest::Paste);
-            emit localRequestTriggered(&request);
+            KTProjectRequest *request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
+                                                          k->currentTable->currentLayer(), 
+                                                          k->currentTable->currentFrame(),
+                                                          KTProjectRequest::Paste);
+            emit localRequestTriggered(request);
     }
 }
 
 void KTExposureSheet::emitRequestExpandCurrentFrame(int n)
 {
-    KTProjectRequest request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(),
-                                                 k->currentTable->currentLayer(),
-                                                 k->currentTable->currentFrame(),
-                                                 KTProjectRequest::Expand, n);
-    emit requestTriggered(&request);
+    KTProjectRequest *request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(),
+                                                  k->currentTable->currentLayer(),
+                                                  k->currentTable->currentFrame(),
+                                                  KTProjectRequest::Expand, n);
+    emit requestTriggered(request);
 }
 
 void KTExposureSheet::expandCurrentFrameOnce()
@@ -368,44 +368,44 @@
            K_FUNCINFO;
     #endif
 
-    KTProjectRequest request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
-                                                 indexLayer, indexFrame, KTProjectRequest::Add);
-    emit requestTriggered(&request);
+    KTProjectRequest *request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex(), 
+                                                  indexLayer, indexFrame, KTProjectRequest::Add);
+    emit requestTriggered(request);
 }
 
 void KTExposureSheet::renameFrame(int indexLayer, int indexFrame, const QString & name)
 {
-    KTProjectRequest event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex() , indexLayer, indexFrame,
-                                               KTProjectRequest::Rename, name);
-    emit requestTriggered(&event);
+    KTProjectRequest *event = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex() , indexLayer, indexFrame,
+                                                KTProjectRequest::Rename, name);
+    emit requestTriggered(event);
 }
 
 void KTExposureSheet::selectFrame(int indexLayer, int indexFrame)
 {
-    KTProjectRequest request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex() , indexLayer, 
-                                                 indexFrame, KTProjectRequest::Select, "1");
-    emit requestTriggered(&request);
+    KTProjectRequest *request = KTRequestBuilder::createFrameRequest(k->scenes->currentIndex() , indexLayer, 
+                                                  indexFrame, KTProjectRequest::Select, "1");
+    emit requestTriggered(request);
 }
 
 void KTExposureSheet::changeVisibilityLayer(int visualIndexLayer, bool visibility)
 {
-    KTProjectRequest event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(), visualIndexLayer,
-                                               KTProjectRequest::View, visibility);
-    emit requestTriggered(&event);
+    KTProjectRequest *event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(), visualIndexLayer,
+                                                KTProjectRequest::View, visibility);
+    emit requestTriggered(event);
 }
 
 void KTExposureSheet::renameLayer(int indexLayer, const QString & name)
 {
-    KTProjectRequest event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(), indexLayer,
-                                               KTProjectRequest::Rename, name);
-    emit requestTriggered(&event);
+    KTProjectRequest *event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(), indexLayer,
+                                                KTProjectRequest::Rename, name);
+    emit requestTriggered(event);
 }
 
 void KTExposureSheet::moveLayer(int oldIndex, int newIndex)
 {
-    KTProjectRequest event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(), oldIndex,
-                                               KTProjectRequest::Move, newIndex);
-    emit requestTriggered(&event);
+    KTProjectRequest *event = KTRequestBuilder::createLayerRequest(k->scenes->currentIndex(), oldIndex,
+                                                KTProjectRequest::Move, newIndex);
+    emit requestTriggered(event);
 }
 
 void KTExposureSheet::actionTriggered(QAction *action)
@@ -490,11 +490,11 @@
                      table->removeLayer(e->layerIndex());
 
                      if (table->layersTotal() == 0) {
-                         KTProjectRequest request = KTRequestBuilder::createLayerRequest(0, 0, KTProjectRequest::Add, QString());
-                         emit requestTriggered(&request);
+                         KTProjectRequest *request = KTRequestBuilder::createLayerRequest(0, 0, KTProjectRequest::Add, QString());
+                         emit requestTriggered(request);
 
                          request = KTRequestBuilder::createFrameRequest(0, 0, 0, KTProjectRequest::Add, QString());
-                         emit requestTriggered(&request);
+                         emit requestTriggered(request);
                      }
                  }
                 break;
Only in ktoon-0.9a-rev1613_new/src/components/exposure: Makefile
diff -ur ktoon-0.9a-rev1613/src/components/help/help/css/ktoon.css ktoon-0.9a-rev1613_new/src/components/help/help/css/ktoon.css
--- ktoon-0.9a-rev1613/src/components/help/help/css/ktoon.css	2010-08-27 14:53:05.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/components/help/help/css/ktoon.css	2011-08-22 10:23:26.000000000 +0200
@@ -3,36 +3,36 @@
 }
 
 .ktoon_background1 {
-     background-image:url('/usr/local/ktoon/share/data/help/images/bg1.png');
+     background-image:url('/home/martti/abs/ktoon/pkg/usr/share/data/help/images/bg1.png');
 }
 
 .ktoon_background2 {
-     background-image:url('/usr/local/ktoon/share/data/help/images/bg2.png');
+     background-image:url('/home/martti/abs/ktoon/pkg/usr/share/data/help/images/bg2.png');
 }
 
 .ktoon_background3 {
-     background-image:url('/usr/local/ktoon/share/data/help/images/bg3.png');
+     background-image:url('/home/martti/abs/ktoon/pkg/usr/share/data/help/images/bg3.png');
 }
 
 .ktoon_background4 {
-     background-image:url('/usr/local/ktoon/share/data/help/images/bg4.png');
+     background-image:url('/home/martti/abs/ktoon/pkg/usr/share/data/help/images/bg4.png');
 }
 
 .ktoon_background5 {
-     background-image:url('/usr/local/ktoon/share/data/help/images/bg5.png');
+     background-image:url('/home/martti/abs/ktoon/pkg/usr/share/data/help/images/bg5.png');
 }
 
 .ktoon_background6 {
-     background-image:url('/usr/local/ktoon/share/data/help/images/bg6.png');
+     background-image:url('/home/martti/abs/ktoon/pkg/usr/share/data/help/images/bg6.png');
 }
 
 .tip_background {
-     background-image:url('/usr/local/ktoon/share/data/help/images/tip_bg.png');
+     background-image:url('/home/martti/abs/ktoon/pkg/usr/share/data/help/images/tip_bg.png');
 }
 
 .labtoon {
      background-color:#ffffff;
-     background-image:url('/usr/local/ktoon/share/data/help/images/labtoon.png');
+     background-image:url('/home/martti/abs/ktoon/pkg/usr/share/data/help/images/labtoon.png');
      background-repeat:no-repeat;
      background-position:left top;
 }
Only in ktoon-0.9a-rev1613_new/src/components/help: Makefile
Only in ktoon-0.9a-rev1613_new/src/components/import: Makefile
Only in ktoon-0.9a-rev1613_new/src/components/kinas: Makefile
diff -ur ktoon-0.9a-rev1613/src/components/library/ktlibrarywidget.cpp ktoon-0.9a-rev1613_new/src/components/library/ktlibrarywidget.cpp
--- ktoon-0.9a-rev1613/src/components/library/ktlibrarywidget.cpp	2010-08-27 14:53:06.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/components/library/ktlibrarywidget.cpp	2011-08-22 13:45:38.000000000 +0200
@@ -242,11 +242,11 @@
 
     QString symKey = k->libraryTree->currentItem()->text(1);
 
-    KTProjectRequest request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::AddSymbolToProject, symKey,
-                               KTLibraryObject::Type(k->libraryTree->currentItem()->data(1, 3216).toInt()), 0, 
-                               k->currentFrame.scene, k->currentFrame.layer, k->currentFrame.frame);
+    KTProjectRequest *request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::AddSymbolToProject, symKey,
+                                KTLibraryObject::Type(k->libraryTree->currentItem()->data(1, 3216).toInt()), 0, 
+                                k->currentFrame.scene, k->currentFrame.layer, k->currentFrame.frame);
 
-    emit requestTriggered(&request);
+    emit requestTriggered(request);
 }
 
 void KTLibraryWidget::removeCurrentGraphic()
@@ -256,10 +256,10 @@
 
     QString symKey = k->libraryTree->currentItem()->text(1);
 
-    KTProjectRequest request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Remove, symKey,
-                               KTLibraryObject::Type(k->libraryTree->currentItem()->data(0, 3216).toInt()), 0);
+    KTProjectRequest *request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Remove, symKey,
+                                KTLibraryObject::Type(k->libraryTree->currentItem()->data(0, 3216).toInt()), 0);
     
-    emit requestTriggered(&request);
+    emit requestTriggered(request);
 }
 
 void KTLibraryWidget::renameObject(QTreeWidgetItem* item)
@@ -304,10 +304,10 @@
         QByteArray data = f.readAll();
         f.close();
 
-        KTProjectRequest request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
-                                                                          KTLibraryObject::Image, data, k->currentFrame.scene, 
-                                                                          k->currentFrame.layer, k->currentFrame.frame);
-        emit requestTriggered(&request);
+        KTProjectRequest *request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
+                                                                           KTLibraryObject::Image, data, k->currentFrame.scene, 
+                                                                           k->currentFrame.layer, k->currentFrame.frame);
+        emit requestTriggered(request);
     } else {
         KOsd::self()->display(tr("Error"), tr("Cannot open file: %1").arg(image), KOsd::Error);
     }
@@ -329,10 +329,10 @@
         QByteArray data = f.readAll();
         f.close();
 
-        KTProjectRequest request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
-                                                     KTLibraryObject::Svg, data, k->currentFrame.scene, 
-                                                     k->currentFrame.layer, k->currentFrame.frame);
-        emit requestTriggered(&request);
+        KTProjectRequest *request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
+                                                      KTLibraryObject::Svg, data, k->currentFrame.scene, 
+                                                      k->currentFrame.layer, k->currentFrame.frame);
+        emit requestTriggered(request);
     } else {
         KOsd::self()->display(tr("Error"), tr("Cannot open file: %1").arg(svg), KOsd::Error);
     }
@@ -419,19 +419,19 @@
                          }
                      }
 
-                     KTProjectRequest request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
-                                                                                       KTLibraryObject::Image, data);
-                     emit requestTriggered(&request);
+                     KTProjectRequest *request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
+                                                                                        KTLibraryObject::Image, data);
+                     emit requestTriggered(request);
 
                      if (i < photograms.size()-1) {
 
-                         KTProjectRequest request = KTRequestBuilder::createFrameRequest(k->currentFrame.scene, k->currentFrame.layer, 
+                         KTProjectRequest *request = KTRequestBuilder::createFrameRequest(k->currentFrame.scene, k->currentFrame.layer, 
                                                                                          k->currentFrame.frame + 1, KTProjectRequest::Add, QString());
-                         emit requestTriggered(&request);
+                         emit requestTriggered(request);
 
                          request = KTRequestBuilder::createFrameRequest(k->currentFrame.scene, k->currentFrame.layer, k->currentFrame.frame + 1, 
                                                             KTProjectRequest::Select);
-                         emit requestTriggered(&request);
+                         emit requestTriggered(request);
                      }
 
                      progressDialog.setLabelText(tr("Loading image #%1").arg(index));
@@ -517,19 +517,19 @@
                      QByteArray data = f.readAll();
                      f.close();
 
-                     KTProjectRequest request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
-                                                                                       KTLibraryObject::Svg, data);
-                     emit requestTriggered(&request);
+                     KTProjectRequest *request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
+                                                                                        KTLibraryObject::Svg, data);
+                     emit requestTriggered(request);
 
                      if (i < photograms.size()-1) {
 
-                         KTProjectRequest request = KTRequestBuilder::createFrameRequest(k->currentFrame.scene, k->currentFrame.layer, 
-                                                                                         k->currentFrame.frame + 1, KTProjectRequest::Add, QString());
-                         emit requestTriggered(&request);
+                         KTProjectRequest *request = KTRequestBuilder::createFrameRequest(k->currentFrame.scene, k->currentFrame.layer, 
+                                                                                          k->currentFrame.frame + 1, KTProjectRequest::Add, QString());
+                         emit requestTriggered(request);
 
                          request = KTRequestBuilder::createFrameRequest(k->currentFrame.scene, k->currentFrame.layer, k->currentFrame.frame + 1, 
                                                             KTProjectRequest::Select);
-                         emit requestTriggered(&request);
+                         emit requestTriggered(request);
                      }
 
                      progressDialog.setLabelText(tr("Loading SVG file #%1").arg(index));
@@ -568,9 +568,9 @@
         QByteArray data = f.readAll();
         f.close();
 
-        KTProjectRequest request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
-                                                     KTLibraryObject::Sound, data);
-        emit requestTriggered(&request);
+        KTProjectRequest *request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, symName,
+                                                      KTLibraryObject::Sound, data);
+        emit requestTriggered(request);
     } else {
         KOsd::self()->display(tr("Error"), tr("Cannot open file: %1").arg(sound), KOsd::Error);
     }
Only in ktoon-0.9a-rev1613_new/src/components/library: Makefile
Only in ktoon-0.9a-rev1613_new/src/components: Makefile
diff -ur ktoon-0.9a-rev1613/src/components/paintarea/ktpaintarea.cpp ktoon-0.9a-rev1613_new/src/components/paintarea/ktpaintarea.cpp
--- ktoon-0.9a-rev1613/src/components/paintarea/ktpaintarea.cpp	2010-08-27 14:53:07.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/components/paintarea/ktpaintarea.cpp	2011-08-22 14:32:53.000000000 +0200
@@ -438,12 +438,12 @@
                          itemIndex = currentScene->currentFrame()->indexOf(item);
                      }
 
-                     KTProjectRequest event = KTRequestBuilder::createItemRequest( 
-                                              currentScene->currentSceneIndex(), currentScene->currentLayerIndex(), 
-                                              currentScene->currentFrameIndex(), 
-                                              itemIndex, QPointF(), type,
-                                              KTProjectRequest::Remove);
-                     emit requestTriggered(&event);
+                     KTProjectRequest *event = KTRequestBuilder::createItemRequest( 
+                                               currentScene->currentSceneIndex(), currentScene->currentLayerIndex(), 
+                                               currentScene->currentFrameIndex(), 
+                                               itemIndex, QPointF(), type,
+                                               KTProjectRequest::Remove);
+                     emit requestTriggered(event);
                      counter++;
             }
         }
@@ -476,11 +476,11 @@
         }
 
         if (strItems != ")") {
-            KTProjectRequest event = KTRequestBuilder::createItemRequest(currentScene->currentSceneIndex(), 
-                                     currentScene->currentLayerIndex(),
-                                     currentScene->currentFrameIndex(), firstItem, QPointF(), KTLibraryObject::Item,
-                                     KTProjectRequest::Group, strItems );
-            emit requestTriggered(&event);
+            KTProjectRequest *event = KTRequestBuilder::createItemRequest(currentScene->currentSceneIndex(), 
+                                      currentScene->currentLayerIndex(),
+                                      currentScene->currentFrameIndex(), firstItem, QPointF(), KTLibraryObject::Item,
+                                      KTProjectRequest::Group, strItems );
+            emit requestTriggered(event);
         }
     }
 }
@@ -492,13 +492,13 @@
         KTGraphicsScene* currentScene = graphicsScene();
         if (currentScene) {
             foreach (QGraphicsItem *item, selected) {
-                     KTProjectRequest event = KTRequestBuilder::createItemRequest( 
-                                              currentScene->currentSceneIndex(), 
-                                              currentScene->currentLayerIndex(), 
-                                              currentScene->currentFrameIndex(), 
-                                              currentScene->currentFrame()->indexOf(item), QPointF(), KTLibraryObject::Item,
-                                              KTProjectRequest::Ungroup);
-                     emit requestTriggered(&event);
+                     KTProjectRequest *event = KTRequestBuilder::createItemRequest( 
+                                               currentScene->currentSceneIndex(), 
+                                               currentScene->currentLayerIndex(), 
+                                               currentScene->currentFrameIndex(), 
+                                               currentScene->currentFrame()->indexOf(item), QPointF(), KTLibraryObject::Item,
+                                               KTProjectRequest::Ungroup);
+                     emit requestTriggered(event);
             }
         }
     }
@@ -573,12 +573,12 @@
                  total = currentScene->currentFrame()->svgItemsCount();
              }
 
-             KTProjectRequest event = KTRequestBuilder::createItemRequest(currentScene->currentSceneIndex(),
-                                      currentScene->currentLayerIndex(), 
-                                      currentScene->currentFrameIndex(), 
-                                      total, point, type, 
-                                      KTProjectRequest::Add, xml);
-             emit requestTriggered(&event);
+             KTProjectRequest *event = KTRequestBuilder::createItemRequest(currentScene->currentSceneIndex(),
+                                       currentScene->currentLayerIndex(), 
+                                       currentScene->currentFrameIndex(), 
+                                       total, point, type, 
+                                       KTProjectRequest::Add, xml);
+             emit requestTriggered(event);
      }
 }
 
@@ -638,9 +638,9 @@
                  QDomDocument doc;
                  doc.appendChild(itemSerializable->toXml(doc));
 
-                 KTProjectRequest request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, 
-                                            symName, KTLibraryObject::Item, doc.toString().toLocal8Bit());
-                 emit requestTriggered(&request);
+                 KTProjectRequest *request = KTRequestBuilder::createLibraryRequest(KTProjectRequest::Add, 
+                                             symName, KTLibraryObject::Item, doc.toString().toLocal8Bit());
+                 emit requestTriggered(request);
              }
     }
 }
@@ -686,10 +686,10 @@
                               return;
                  }
 
-                 KTProjectRequest event = KTRequestBuilder::createItemRequest(currentScene->currentSceneIndex(),
-                                          currentScene->currentLayerIndex(), currentScene->currentFrameIndex(), value, QPointF(), 
-                                          KTLibraryObject::Item,  KTProjectRequest::Move, newPos);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createItemRequest(currentScene->currentSceneIndex(),
+                                           currentScene->currentLayerIndex(), currentScene->currentFrameIndex(), value, QPointF(), 
+                                           KTLibraryObject::Item,  KTProjectRequest::Move, newPos);
+                 emit requestTriggered(event);
              }
     }
 }
Only in ktoon-0.9a-rev1613_new/src/components/paintarea: Makefile
Only in ktoon-0.9a-rev1613_new/src/components/pen: Makefile
diff -ur ktoon-0.9a-rev1613/src/components/scenes/ktsceneswidget.cpp ktoon-0.9a-rev1613_new/src/components/scenes/ktsceneswidget.cpp
--- ktoon-0.9a-rev1613/src/components/scenes/ktsceneswidget.cpp	2010-08-27 14:53:07.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/components/scenes/ktsceneswidget.cpp	2011-08-22 13:35:27.000000000 +0200
@@ -124,8 +124,8 @@
 
 void KTScenesWidget::selectScene(const QString &name, int index)
 {
-    KTProjectRequest event = KTRequestBuilder::createSceneRequest(index, KTProjectRequest::Select);
-    emit localRequestTriggered(&event);
+    KTProjectRequest *event = KTRequestBuilder::createSceneRequest(index, KTProjectRequest::Select);
+    emit localRequestTriggered(event);
 }
 
 void KTScenesWidget::sceneDobleClick(QTreeWidgetItem * item, int value)
@@ -146,21 +146,21 @@
     if (index == 0)
         index = k->tableScenes->scenesCount();
 
-    KTProjectRequest event = KTRequestBuilder::createSceneRequest(index, KTProjectRequest::Add);
-    emit requestTriggered(&event);
+    KTProjectRequest *event = KTRequestBuilder::createSceneRequest(index, KTProjectRequest::Add);
+    emit requestTriggered(event);
 
     event = KTRequestBuilder::createLayerRequest(index, 0, KTProjectRequest::Add);
-    emit requestTriggered(&event);
+    emit requestTriggered(event);
 
     event = KTRequestBuilder::createFrameRequest(index, 0, 0, KTProjectRequest::Add);
-    emit requestTriggered(&event);
+    emit requestTriggered(event);
 }
 
 void KTScenesWidget::emitRequestRemoveScene()
 {
-    KTProjectRequest event = KTRequestBuilder::createSceneRequest(k->tableScenes->indexCurrentScene(), KTProjectRequest::Remove);
+    KTProjectRequest *event = KTRequestBuilder::createSceneRequest(k->tableScenes->indexCurrentScene(), KTProjectRequest::Remove);
 
-    emit requestTriggered(&event);
+    emit requestTriggered(event);
 }
 
 void KTScenesWidget::closeAllScenes()
Only in ktoon-0.9a-rev1613_new/src/components/scenes: Makefile
diff -ur ktoon-0.9a-rev1613/src/components/timeline/kttimeline.cpp ktoon-0.9a-rev1613_new/src/components/timeline/kttimeline.cpp
--- ktoon-0.9a-rev1613/src/components/timeline/kttimeline.cpp	2010-08-27 14:53:08.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/components/timeline/kttimeline.cpp	2011-08-22 15:19:26.000000000 +0200
@@ -448,9 +448,9 @@
 
                  if (layersTotal == 1) {
                      for (int frame = usedFrames; frame < framePos; frame++) {
-                          KTProjectRequest event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, frame + 1,
-                                                   KTProjectRequest::Add, arg);
-                          emit requestTriggered(&event);
+                          KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, frame + 1,
+                                                    KTProjectRequest::Add, arg);
+                          emit requestTriggered(event);
                      }
 
                  } else {
@@ -458,9 +458,9 @@
 
                      for (int layer=0; layer < layersTotal; layer++) {
                           for (int frame = usedFrames; frame <= framePos; frame++) {
-                               KTProjectRequest event = KTRequestBuilder::createFrameRequest(scenePos, layer, frame,
-                                                        KTProjectRequest::Add, arg);
-                               emit requestTriggered(&event);
+                               KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scenePos, layer, frame,
+                                                         KTProjectRequest::Add, arg);
+                               emit requestTriggered(event);
                           }
                      }
                  }
@@ -470,27 +470,27 @@
             break;
             case KTProjectActionBar::RemoveFrame:
             {
-                 KTProjectRequest event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, framePos - 1,
-                                          KTProjectRequest::Remove, arg);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, framePos - 1,
+                                           KTProjectRequest::Remove, arg);
+                 emit requestTriggered(event);
 
                  return true;
             }
             break;
             case KTProjectActionBar::MoveFrameUp:
             {
-                 KTProjectRequest event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, framePos,
-                                          KTProjectRequest::Move, framePos-1);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, framePos,
+                                           KTProjectRequest::Move, framePos-1);
+                 emit requestTriggered(event);
 
                  return true;
             }
             break;
             case KTProjectActionBar::MoveFrameDown:
             {
-                 KTProjectRequest event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, framePos,
-                                          KTProjectRequest::Move, framePos+1);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, framePos,
+                                           KTProjectRequest::Move, framePos+1);
+                 emit requestTriggered(event);
 
                  return true;
             }
@@ -498,9 +498,9 @@
             /*
             case KTProjectActionBar::SelectFrame:
             {
-                 KTProjectRequest event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, framePos,
-                                          KTProjectRequest::Select, arg);
-                 emit localRequestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, framePos,
+                                           KTProjectRequest::Select, arg);
+                 emit localRequestTriggered(event);
 
                  return true;
             }
@@ -525,20 +525,20 @@
     switch (action) {
             case KTProjectActionBar::InsertLayer:
             {
-                 KTProjectRequest event = KTRequestBuilder::createLayerRequest(scenePos, layerPos,
-                                          KTProjectRequest::Add, arg);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createLayerRequest(scenePos, layerPos,
+                                           KTProjectRequest::Add, arg);
+                 emit requestTriggered(event);
 
                  if (layerPos == 0) {
                      event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, 0,
                                                KTProjectRequest::Add, arg);
-                     emit requestTriggered(&event);
+                     emit requestTriggered(event);
                  } else {
                      int total = framesTable(scenePos)->lastFrameByLayer(layerPos-1);
                      for (int j=0; j <= total; j++) {
                           event = KTRequestBuilder::createFrameRequest(scenePos, layerPos, j,
                                                                        KTProjectRequest::Add, arg);
-                          emit requestTriggered(&event);
+                          emit requestTriggered(event);
                      }
                  }
 
@@ -547,28 +547,28 @@
             break;
             case KTProjectActionBar::RemoveLayer:
             {
-                 KTProjectRequest event = KTRequestBuilder::createLayerRequest(scenePos, layerPos-1, 
-                                          KTProjectRequest::Remove, arg);
+                 KTProjectRequest *event = KTRequestBuilder::createLayerRequest(scenePos, layerPos-1, 
+                                           KTProjectRequest::Remove, arg);
             
-                 emit requestTriggered(&event);
+                 emit requestTriggered(event);
 
                  return true;
             }
             break;
             case KTProjectActionBar::MoveLayerUp:
             {
-                 KTProjectRequest event = KTRequestBuilder::createLayerRequest(scenePos, layerPos, 
-                                          KTProjectRequest::Move, layerPos - 1);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createLayerRequest(scenePos, layerPos, 
+                                           KTProjectRequest::Move, layerPos - 1);
+                 emit requestTriggered(event);
 
                  return true;
             }
             break;
             case KTProjectActionBar::MoveLayerDown:
             {
-                 KTProjectRequest event = KTRequestBuilder::createLayerRequest(scenePos, layerPos, 
-                                          KTProjectRequest::Move, layerPos + 1);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createLayerRequest(scenePos, layerPos,
+                                           KTProjectRequest::Move, layerPos + 1);
+                 emit requestTriggered(event);
                  return true;
             }
             break;
@@ -585,38 +585,38 @@
     switch (action) {
             case KTProjectActionBar::InsertScene:
             {
-                 KTProjectRequest event = KTRequestBuilder::createSceneRequest(scenePos + 1, 
+                 KTProjectRequest *event = KTRequestBuilder::createSceneRequest(scenePos + 1, 
                                            KTProjectRequest::Add, arg);
             
-                 emit requestTriggered(&event);
+                 emit requestTriggered(event);
             
                  return true;
             }
             break;
             case KTProjectActionBar::RemoveScene:
             {
-                 KTProjectRequest event = KTRequestBuilder::createSceneRequest(scenePos, 
-                                          KTProjectRequest::Remove, arg);
+                 KTProjectRequest *event = KTRequestBuilder::createSceneRequest(scenePos, 
+                                           KTProjectRequest::Remove, arg);
             
-                 emit requestTriggered(&event);
+                 emit requestTriggered(event);
 
                  return true;
             }
             break;
             case KTProjectActionBar::MoveSceneUp:
             {
-                 KTProjectRequest event = KTRequestBuilder::createSceneRequest(scenePos, KTProjectRequest::Move,
-                                          scenePos + 1);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createSceneRequest(scenePos, KTProjectRequest::Move,
+                                           scenePos + 1);
+                 emit requestTriggered(event);
 
                  return true;
             }
             break;
             case KTProjectActionBar::MoveSceneDown:
             {
-                 KTProjectRequest event = KTRequestBuilder::createSceneRequest(scenePos, KTProjectRequest::Move,
-                                     scenePos - 1);
-                 emit requestTriggered(&event);
+                 KTProjectRequest *event = KTRequestBuilder::createSceneRequest(scenePos, KTProjectRequest::Move,
+                                      scenePos - 1);
+                 emit requestTriggered(event);
                  return true;
             }
             break;
@@ -632,9 +632,9 @@
     #endif
     int scenePos = k->container->currentIndex();
     
-    KTProjectRequest event = KTRequestBuilder::createLayerRequest(scenePos, layer, KTProjectRequest::Rename, name);
+    KTProjectRequest *event = KTRequestBuilder::createLayerRequest(scenePos, layer, KTProjectRequest::Rename, name);
     
-    emit requestTriggered(&event);
+    emit requestTriggered(event);
 }
 
 void KTTimeLine::emitSelectionSignal()
@@ -651,9 +651,9 @@
 
 void KTTimeLine::emitLayerVisibility(int sceneIndex, int layerIndex, bool checked) 
 {
-    KTProjectRequest event = KTRequestBuilder::createLayerRequest(sceneIndex,
-                             layerIndex, KTProjectRequest::View, checked);
-    emit requestTriggered(&event);
+    KTProjectRequest *event = KTRequestBuilder::createLayerRequest(sceneIndex,
+                              layerIndex, KTProjectRequest::View, checked);
+    emit requestTriggered(event);
 }
 
 void KTTimeLine::selectFrame(int indexLayer, int indexFrame)
@@ -661,9 +661,9 @@
     int scenePos = k->container->currentIndex();
 
     kFatal() << "KTTimeLine::selectFrame() - Just tracing!";
-    KTProjectRequest request = KTRequestBuilder::createFrameRequest(scenePos, indexLayer,
-                                                 indexFrame, KTProjectRequest::Select, "1");
-    emit requestTriggered(&request);
+    KTProjectRequest *request = KTRequestBuilder::createFrameRequest(scenePos, indexLayer,
+                                                  indexFrame, KTProjectRequest::Select, "1");
+    emit requestTriggered(request);
 
 }
 
@@ -671,16 +671,16 @@
 {
     if (k->container->count() > 1) {
         kFatal() << "KTTimeLine::emitRequestChangeScene - Just tracing!";
-        KTProjectRequest request = KTRequestBuilder::createSceneRequest(sceneIndex, KTProjectRequest::Select);
-        emit localRequestTriggered(&request);
+        KTProjectRequest *request = KTRequestBuilder::createSceneRequest(sceneIndex, KTProjectRequest::Select);
+        emit localRequestTriggered(request);
     }
 }
 
 void KTTimeLine::emitRequestChangeFrame(int sceneIndex, int layerIndex, int frameIndex)
 {
     kFatal() << "KTTimeLine::emitRequestChangeFrame - Just tracing!";
-    KTProjectRequest event = KTRequestBuilder::createFrameRequest(sceneIndex, layerIndex, frameIndex,
-                             KTProjectRequest::Select, "1");
-    emit requestTriggered(&event);
+    KTProjectRequest *event = KTRequestBuilder::createFrameRequest(sceneIndex, layerIndex, frameIndex,
+                              KTProjectRequest::Select, "1");
+    emit requestTriggered(event);
 }
 
Only in ktoon-0.9a-rev1613_new/src/components/timeline: Makefile
Only in ktoon-0.9a-rev1613_new/src/components/twitter: Makefile
Only in ktoon-0.9a-rev1613_new/src/libbase: Makefile
Only in ktoon-0.9a-rev1613_new/src/libktoon: libktoon.so
Only in ktoon-0.9a-rev1613_new/src/libktoon: libktoon.so.1
Only in ktoon-0.9a-rev1613_new/src/libktoon: libktoon.so.1.0
Only in ktoon-0.9a-rev1613_new/src/libktoon: libktoon.so.1.0.0
Only in ktoon-0.9a-rev1613_new/src/libktoon: Makefile
Only in ktoon-0.9a-rev1613_new/src/libktui: Makefile
Only in ktoon-0.9a-rev1613_new/src: Makefile
diff -ur ktoon-0.9a-rev1613/src/net/ktnetprojectmanagerhandler.cpp ktoon-0.9a-rev1613_new/src/net/ktnetprojectmanagerhandler.cpp
--- ktoon-0.9a-rev1613/src/net/ktnetprojectmanagerhandler.cpp	2010-08-27 14:52:59.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/net/ktnetprojectmanagerhandler.cpp	2011-08-22 13:15:44.000000000 +0200
@@ -147,8 +147,8 @@
         return true;
     }
     
-    KTProjectRequest request = KTRequestBuilder::fromResponse(response);
-    handleProjectRequest(&request);
+    KTProjectRequest *request = KTRequestBuilder::fromResponse(response);
+    handleProjectRequest(request);
     
     k->doAction = false;
     
@@ -257,18 +257,18 @@
             if (k->ownPackage && !k->doAction) {
                 if (parser.response()->part() == KTProjectRequest::Item) {
                     KTItemResponse *response = static_cast<KTItemResponse *>(parser.response());
-                    KTProjectRequest request = KTRequestBuilder::createFrameRequest(response->sceneIndex(), response->layerIndex(), 
+                    KTProjectRequest *request = KTRequestBuilder::createFrameRequest(response->sceneIndex(), response->layerIndex(), 
                                                                                     response->frameIndex(), KTProjectRequest::Select);
-                    request.setExternal(!k->ownPackage);
-                    emit sendLocalCommand(&request);
+                    request->setExternal(!k->ownPackage);
+                    emit sendLocalCommand(request);
                 }
 
                 return;
             }
             
-            KTProjectRequest request = KTRequestBuilder::fromResponse( parser.response());
-            request.setExternal(!k->ownPackage);
-            emitRequest(&request, k->doAction && k->ownPackage);
+            KTProjectRequest *request = KTRequestBuilder::fromResponse( parser.response());
+            request->setExternal(!k->ownPackage);
+            emitRequest(request, k->doAction && k->ownPackage);
 
         } else { // TODO: show error 
             #ifdef K_DEBUG
Only in ktoon-0.9a-rev1613_new/src/net: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/export/ffmpegplugin: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/export/genericexportplugin: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/export: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/export/smilexportplugin: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/filters: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/import: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins: Makefile
diff -ur ktoon-0.9a-rev1613/src/plugins/tools/contourselectiontool/contourselection.cpp ktoon-0.9a-rev1613_new/src/plugins/tools/contourselectiontool/contourselection.cpp
--- ktoon-0.9a-rev1613/src/plugins/tools/contourselectiontool/contourselection.cpp	2010-08-27 14:53:11.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/plugins/tools/contourselectiontool/contourselection.cpp	2011-08-22 15:09:05.000000000 +0200
@@ -137,11 +137,11 @@
                  if (item) {
                      if (!qgraphicsitem_cast<KControlNode *>(item)) {
                          if (!qgraphicsitem_cast<KTPathItem*>(item)) {
-                             KTProjectRequest event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), 
-                                                      scene->currentLayerIndex(), scene->currentFrameIndex(), 
-                                                      scene->currentFrame()->indexOf(item), QPointF(), KTLibraryObject::Item, 
-                                                      KTProjectRequest::Convert, 2);
-                             emit requested(&event);
+                             KTProjectRequest *event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), 
+                                                       scene->currentLayerIndex(), scene->currentFrameIndex(), 
+                                                       scene->currentFrame()->indexOf(item), QPointF(), KTLibraryObject::Item, 
+                                                       KTProjectRequest::Convert, 2);
+                             emit requested(event);
                          } else {
                              k->nodeGroups << new KNodeGroup(item, scene);
                          }
@@ -156,15 +156,15 @@
                          QDomDocument doc;
                          doc.appendChild(qgraphicsitem_cast<KTPathItem *>(group->parentItem())->toXml(doc));
                     
-                         KTProjectRequest event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), 
-                                                  scene->currentLayerIndex(), scene->currentFrameIndex(), position, 
-                                                  QPointF(), KTLibraryObject::Item, KTProjectRequest::EditNodes, doc.toString());
+                         KTProjectRequest *event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), 
+                                                   scene->currentLayerIndex(), scene->currentFrameIndex(), position, 
+                                                   QPointF(), KTLibraryObject::Item, KTProjectRequest::EditNodes, doc.toString());
                     
                          foreach (QGraphicsView * view, scene->views())
                                   view->setUpdatesEnabled(false);
                     
                          group->restoreItem();
-                         emit requested(&event);
+                         emit requested(event);
                      } else {
                          kDebug("selection") << "position is " << position; 
                      }
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/contourselectiontool: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/erasertool: Makefile
diff -ur ktoon-0.9a-rev1613/src/plugins/tools/filltool/filltool.cpp ktoon-0.9a-rev1613_new/src/plugins/tools/filltool/filltool.cpp
--- ktoon-0.9a-rev1613/src/plugins/tools/filltool/filltool.cpp	2010-08-27 14:53:11.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/plugins/tools/filltool/filltool.cpp	2011-08-22 15:17:59.000000000 +0200
@@ -169,12 +169,12 @@
             QDomDocument doc;
             doc.appendChild(intersection->toXml(doc));
         
-            KTProjectRequest event = KTRequestBuilder::createItemRequest( scene->currentSceneIndex(), 
-                            scene->currentLayerIndex(), scene->currentFrameIndex(), 
-                            scene->currentFrame()->graphics().count(), QPointF(),
-                            KTLibraryObject::Item, KTProjectRequest::Add, 
-                            doc.toString()); // Adds to end
-            emit requested(&event);
+            KTProjectRequest *event = KTRequestBuilder::createItemRequest( scene->currentSceneIndex(), 
+                             scene->currentLayerIndex(), scene->currentFrameIndex(), 
+                             scene->currentFrame()->graphics().count(), QPointF(),
+                             KTLibraryObject::Item, KTProjectRequest::Add, 
+                             doc.toString()); // Adds to end
+            emit requested(event);
         }
         else
         {
@@ -194,12 +194,12 @@
                     QDomDocument doc;
                     doc.appendChild(KTSerializer::properties(shape, doc));
                     
-                    KTProjectRequest event = KTRequestBuilder::createItemRequest( 
-                                scene->currentSceneIndex(), scene->currentLayerIndex(),
-                                scene->currentFrameIndex(), position, QPointF(), KTLibraryObject::Item, 
-                                KTProjectRequest::Transform, doc.toString());
+                    KTProjectRequest *event = KTRequestBuilder::createItemRequest( 
+                                 scene->currentSceneIndex(), scene->currentLayerIndex(),
+                                 scene->currentFrameIndex(), position, QPointF(), KTLibraryObject::Item, 
+                                 KTProjectRequest::Transform, doc.toString());
 
-                    emit requested(&event);
+                    emit requested(event);
                 }
             }
         }
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/filltool: Makefile
diff -ur ktoon-0.9a-rev1613/src/plugins/tools/geometrictool/geometrictool.cpp ktoon-0.9a-rev1613_new/src/plugins/tools/geometrictool/geometrictool.cpp
--- ktoon-0.9a-rev1613/src/plugins/tools/geometrictool/geometrictool.cpp	2010-08-27 14:53:12.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/plugins/tools/geometrictool/geometrictool.cpp	2011-08-22 15:16:25.000000000 +0200
@@ -193,11 +193,11 @@
     QDomDocument doc;
     doc.appendChild(dynamic_cast<KTAbstractSerializable *>(m_item)->toXml(doc));
     
-    KTProjectRequest event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), scene->currentLayerIndex(), 
-                             scene->currentFrameIndex(), scene->currentFrame()->graphics().count(), QPointF(),
-                             KTLibraryObject::Item, KTProjectRequest::Add, doc.toString()); // Adds to end
+    KTProjectRequest *event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), scene->currentLayerIndex(), 
+                              scene->currentFrameIndex(), scene->currentFrame()->graphics().count(), QPointF(),
+                              KTLibraryObject::Item, KTProjectRequest::Add, doc.toString()); // Adds to end
     
-    emit requested(&event);
+    emit requested(event);
 }
 
 QMap<QString, KAction *> GeometricTool::actions() const
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/geometrictool: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/tools: Makefile
diff -ur ktoon-0.9a-rev1613/src/plugins/tools/penciltool/brush.cpp ktoon-0.9a-rev1613_new/src/plugins/tools/penciltool/brush.cpp
--- ktoon-0.9a-rev1613/src/plugins/tools/penciltool/brush.cpp	2010-08-27 14:53:12.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/plugins/tools/penciltool/brush.cpp	2011-08-22 14:56:18.000000000 +0200
@@ -140,9 +140,9 @@
     QDomDocument doc;
     doc.appendChild(m_item->toXml(doc));
 
-    KTProjectRequest request = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), scene->currentLayerIndex(), scene->currentFrameIndex(), scene->currentFrame()->graphics().count(), QPointF(), KTLibraryObject::Item, KTProjectRequest::Add, doc.toString());
+    KTProjectRequest *request = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), scene->currentLayerIndex(), scene->currentFrameIndex(), scene->currentFrame()->graphics().count(), QPointF(), KTLibraryObject::Item, KTProjectRequest::Add, doc.toString());
 
-    emit requested(&request);
+    emit requested(request);
 }
 
 void Brush::smoothPath(QPainterPath &path, double smoothness, int from, int to)
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/penciltool: Makefile
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/polylinetool: Makefile
diff -ur ktoon-0.9a-rev1613/src/plugins/tools/polylinetool/polyline.cpp ktoon-0.9a-rev1613_new/src/plugins/tools/polylinetool/polyline.cpp
--- ktoon-0.9a-rev1613/src/plugins/tools/polylinetool/polyline.cpp	2010-08-27 14:53:11.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/plugins/tools/polylinetool/polyline.cpp	2011-08-22 15:36:16.000000000 +0200
@@ -201,21 +201,21 @@
     QDomDocument doc;
     if (k->begin) {
         doc.appendChild(k->item->toXml(doc));
-        KTProjectRequest request = KTRequestBuilder::createItemRequest(k->scene->currentSceneIndex(), k->scene->currentLayerIndex(), 
-                                                                       k->scene->currentFrameIndex(), k->scene->currentFrame()->graphicItemsCount(), 
-                                                                       QPointF(), KTLibraryObject::Item, KTProjectRequest::Add, doc.toString());
+        KTProjectRequest *request = KTRequestBuilder::createItemRequest(k->scene->currentSceneIndex(), k->scene->currentLayerIndex(), 
+                                                                        k->scene->currentFrameIndex(), k->scene->currentFrame()->graphicItemsCount(), 
+                                                                        QPointF(), KTLibraryObject::Item, KTProjectRequest::Add, doc.toString());
         
-        emit requested(&request);
+        emit requested(request);
     } else if (!k->nodegroup->isSelected()) {
                int position = scene->currentFrame()->indexOf(k->item);
         
                if (position != -1 && qgraphicsitem_cast<QGraphicsPathItem *>(k->nodegroup->parentItem())) {
                    doc.appendChild(qgraphicsitem_cast<KTPathItem *>(k->nodegroup->parentItem())->toXml(doc));
             
-                   KTProjectRequest event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), scene->currentLayerIndex(), scene->currentFrameIndex(), position, 
-                                                                                QPointF(), KTLibraryObject::Item, KTProjectRequest::EditNodes, doc.toString());
+                   KTProjectRequest *event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), scene->currentLayerIndex(), scene->currentFrameIndex(), position, 
+                                                                                 QPointF(), KTLibraryObject::Item, KTProjectRequest::EditNodes, doc.toString());
                    k->nodegroup->restoreItem();
-                   emit requested(&event);
+                   emit requested(event);
                } else {
                    kDebug("selection") << "position is " << position; 
                }
@@ -335,13 +335,13 @@
             if (position != -1 && qgraphicsitem_cast<QGraphicsPathItem *>(k->nodegroup->parentItem())) {
                 doc.appendChild(qgraphicsitem_cast<KTPathItem *>(k->nodegroup->parentItem())->toXml(doc));
                 
-                KTProjectRequest event = KTRequestBuilder::createItemRequest(k->scene->currentSceneIndex(), k->scene->currentLayerIndex(), k->scene->currentFrameIndex(), 
-                                                                             position, QPointF(), KTLibraryObject::Item, KTProjectRequest::EditNodes, doc.toString());
+                KTProjectRequest *event = KTRequestBuilder::createItemRequest(k->scene->currentSceneIndex(), k->scene->currentLayerIndex(), k->scene->currentFrameIndex(), 
+                                                                              position, QPointF(), KTLibraryObject::Item, KTProjectRequest::EditNodes, doc.toString());
                 foreach (QGraphicsView * view, k->scene->views())
                          view->setUpdatesEnabled(false);
 
                 k->nodegroup->restoreItem();
-                emit requested(&event);
+                emit requested(event);
             } else {
                 kFatal() << "PolyLine::nodeChanged() -> ERROR: position == -1 && No nodegroup parent item";
             }
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/selecttool: Makefile
diff -ur ktoon-0.9a-rev1613/src/plugins/tools/selecttool/select.cpp ktoon-0.9a-rev1613_new/src/plugins/tools/selecttool/select.cpp
--- ktoon-0.9a-rev1613/src/plugins/tools/selecttool/select.cpp	2010-08-27 14:53:11.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/plugins/tools/selecttool/select.cpp	2011-08-22 15:05:41.000000000 +0200
@@ -221,12 +221,12 @@
 
                          manager->restoreItem();
 
-                         KTProjectRequest event = KTRequestBuilder::createItemRequest( 
+                         KTProjectRequest *event = KTRequestBuilder::createItemRequest( 
                                     scene->currentSceneIndex(), 
                                     scene->currentLayerIndex(), 
                                     scene->currentFrameIndex(), position, QPointF(), type,
                                     KTProjectRequest::Transform, doc.toString());
-                         emit requested(&event);
+                         emit requested(event);
                      } else {
                          kDebug("selection") << "position is " << position; 
                      }
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/texttool: Makefile
diff -ur ktoon-0.9a-rev1613/src/plugins/tools/texttool/texttool.cpp ktoon-0.9a-rev1613_new/src/plugins/tools/texttool/texttool.cpp
--- ktoon-0.9a-rev1613/src/plugins/tools/texttool/texttool.cpp	2010-08-27 14:53:11.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/plugins/tools/texttool/texttool.cpp	2011-08-22 15:15:57.000000000 +0200
@@ -126,11 +126,11 @@
     QDomDocument doc;
     doc.appendChild(m_item->toXml(doc));
 
-    KTProjectRequest event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), scene->currentLayerIndex(), 
-                             scene->currentFrameIndex(), scene->currentFrame()->graphics().count(), QPointF(),
-                             KTLibraryObject::Item, KTProjectRequest::Add, doc.toString()); // Adds to end
+    KTProjectRequest *event = KTRequestBuilder::createItemRequest(scene->currentSceneIndex(), scene->currentLayerIndex(), 
+                              scene->currentFrameIndex(), scene->currentFrame()->graphics().count(), QPointF(),
+                              KTLibraryObject::Item, KTProjectRequest::Add, doc.toString()); // Adds to end
 
-    emit requested(&event);
+    emit requested(event);
 }
 
 QMap<QString, KAction *> TextTool::actions() const
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/tweenertool: Makefile
diff -ur ktoon-0.9a-rev1613/src/plugins/tools/tweenertool/tweener.cpp ktoon-0.9a-rev1613_new/src/plugins/tools/tweenertool/tweener.cpp
--- ktoon-0.9a-rev1613/src/plugins/tools/tweenertool/tweener.cpp	2010-08-27 14:53:11.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/plugins/tools/tweenertool/tweener.cpp	2011-08-22 15:56:14.000000000 +0200
@@ -307,15 +307,15 @@
 
                  kFatal() << "Tweener::applyTweener(): Map -> " << route;
 
-                 KTProjectRequest request = KTRequestBuilder::createItemRequest(
-                                            k->scene->currentSceneIndex(),
-                                            k->scene->currentLayerIndex(),
-                                            k->scene->currentFrameIndex(),
-                                            k->scene->currentFrame()->indexOf(item),
-                                            QPointF(), KTLibraryObject::Item,
-                                            KTProjectRequest::Tweening, 
-                                            k->configurator->steps(k->scene->currentFrameIndex(), route));
-                 emit requested(&request);
+                 KTProjectRequest *request = KTRequestBuilder::createItemRequest(
+                                             k->scene->currentSceneIndex(),
+                                             k->scene->currentLayerIndex(),
+                                             k->scene->currentFrameIndex(),
+                                             k->scene->currentFrame()->indexOf(item),
+                                             QPointF(), KTLibraryObject::Item,
+                                             KTProjectRequest::Tweening, 
+                                             k->configurator->steps(k->scene->currentFrameIndex(), route));
+                 emit requested(request);
 
                  if (KTLayer *layer = k->scene->scene()->layer(k->scene->currentLayerIndex())) {
                      int frames = layer->frames().count();
@@ -324,10 +324,10 @@
                      int start = k->scene->currentFrameIndex() + 1;
 
                      for (int i = start; i < total; i++) {
-                          KTProjectRequest requestFrame = KTRequestBuilder::createFrameRequest(k->scene->currentSceneIndex(), 
-                                                          k->scene->currentLayerIndex(), 
-                                                          i, KTProjectRequest::Add);
-                          emit requested(&requestFrame);
+                          KTProjectRequest *requestFrame = KTRequestBuilder::createFrameRequest(k->scene->currentSceneIndex(), 
+                                                           k->scene->currentLayerIndex(), 
+                                                           i, KTProjectRequest::Add);
+                          emit requested(requestFrame);
                      }
                  }
 
Only in ktoon-0.9a-rev1613_new/src/plugins/tools/viewtool: Makefile
Only in ktoon-0.9a-rev1613_new/src/shell: Makefile
diff -ur ktoon-0.9a-rev1613/src/store/ktcommandexecutor.cpp ktoon-0.9a-rev1613_new/src/store/ktcommandexecutor.cpp
--- ktoon-0.9a-rev1613/src/store/ktcommandexecutor.cpp	2010-08-27 14:53:00.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/store/ktcommandexecutor.cpp	2011-08-22 10:44:56.000000000 +0200
@@ -156,7 +156,7 @@
     if (!scene)
         return false;
     
-    KTProjectRequest request = KTRequestBuilder::createSceneRequest(position, KTProjectRequest::Rename, newName);
+    KTProjectRequest *request = KTRequestBuilder::createSceneRequest(position, KTProjectRequest::Rename, newName);
     
     scene->setSceneName(newName);
     
diff -ur ktoon-0.9a-rev1613/src/store/ktprojectmanager.cpp ktoon-0.9a-rev1613_new/src/store/ktprojectmanager.cpp
--- ktoon-0.9a-rev1613/src/store/ktprojectmanager.cpp	2010-08-27 14:53:00.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/store/ktprojectmanager.cpp	2011-08-22 10:39:36.000000000 +0200
@@ -171,14 +171,14 @@
     k->project->setOpen(true);
     setupProjectDir();
 
-    KTProjectRequest request = KTRequestBuilder::createSceneRequest(0, KTProjectRequest::Add, QString());
-    handleProjectRequest(&request);
+    KTProjectRequest *request = KTRequestBuilder::createSceneRequest(0, KTProjectRequest::Add, QString());
+    handleProjectRequest(request);
 
     request = KTRequestBuilder::createLayerRequest(0, 0, KTProjectRequest::Add, QString());
-    handleProjectRequest(&request);
+    handleProjectRequest(request);
 
     request = KTRequestBuilder::createFrameRequest(0, 0, 0, KTProjectRequest::Add, QString());
-    handleProjectRequest(&request);
+    handleProjectRequest(request);
 }
 
 
@@ -324,7 +324,7 @@
                 }
             } else if (response->action() == KTProjectRequest::Paste) {
                        response->setArg(k->copyFrame);
-                       handleProjectRequest(& KTRequestBuilder::fromResponse(response));
+                       handleProjectRequest(KTRequestBuilder::fromResponse(response));
                        return;
             }
         }
diff -ur ktoon-0.9a-rev1613/src/store/ktrequestbuilder.cpp ktoon-0.9a-rev1613_new/src/store/ktrequestbuilder.cpp
--- ktoon-0.9a-rev1613/src/store/ktrequestbuilder.cpp	2010-08-27 14:53:00.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/store/ktrequestbuilder.cpp	2011-08-22 10:55:41.000000000 +0200
@@ -46,7 +46,7 @@
 {
 }
 
-KTProjectRequest KTRequestBuilder::createItemRequest(int sceneIndex, int layerIndex, int frameIndex, int itemIndex, QPointF point, KTLibraryObject::Type type, int actionId, const QVariant &arg, const QByteArray &data)
+KTProjectRequest *KTRequestBuilder::createItemRequest(int sceneIndex, int layerIndex, int frameIndex, int itemIndex, QPointF point, KTLibraryObject::Type type, int actionId, const QVariant &arg, const QByteArray &data)
 {
     QDomDocument doc;
 
@@ -89,12 +89,12 @@
     root.appendChild(scene);
 
     doc.appendChild(root);
-    KTProjectRequest request(doc.toString(0));
+    KTProjectRequest *request = new KTProjectRequest(doc.toString(0));
 
     return request;
 }
 
-KTProjectRequest KTRequestBuilder::createFrameRequest(int sceneIndex, int layerIndex, int frameIndex, int actionId, const QVariant &arg, const QByteArray &data)
+KTProjectRequest *KTRequestBuilder::createFrameRequest(int sceneIndex, int layerIndex, int frameIndex, int actionId, const QVariant &arg, const QByteArray &data)
 {
     QDomDocument doc;
 
@@ -122,11 +122,11 @@
     root.appendChild(scene);
     doc.appendChild(root);
 
-    return KTProjectRequest(doc.toString(0));
+    return new KTProjectRequest(doc.toString(0));
 }
 
 
-KTProjectRequest KTRequestBuilder::createLayerRequest(int sceneIndex, int layerIndex, int actionId, const QVariant &arg, const QByteArray &data)
+KTProjectRequest *KTRequestBuilder::createLayerRequest(int sceneIndex, int layerIndex, int actionId, const QVariant &arg, const QByteArray &data)
 {
     QDomDocument doc;
 
@@ -151,10 +151,10 @@
 
     doc.appendChild(root);
 
-    return KTProjectRequest(doc.toString(0));
+    return new KTProjectRequest(doc.toString(0));
 }
 
-KTProjectRequest KTRequestBuilder::createSceneRequest(int sceneIndex, int actionId, const QVariant &arg, const QByteArray &data)
+KTProjectRequest *KTRequestBuilder::createSceneRequest(int sceneIndex, int actionId, const QVariant &arg, const QByteArray &data)
 {
     QDomDocument doc;
     QDomElement root = doc.createElement("request");
@@ -174,10 +174,10 @@
 
     doc.appendChild(root);
 
-    return KTProjectRequest(doc.toString(0));
+    return new KTProjectRequest(doc.toString(0));
 }
 
-KTProjectRequest KTRequestBuilder::createLibraryRequest(int actionId, const QVariant &arg, KTLibraryObject::Type type, const QByteArray &data, int sceneIndex, int layerIndex, int frameIndex)
+KTProjectRequest *KTRequestBuilder::createLibraryRequest(int actionId, const QVariant &arg, KTLibraryObject::Type type, const QByteArray &data, int sceneIndex, int layerIndex, int frameIndex)
 {
     QDomDocument doc;
     QDomElement root = doc.createElement("request");
@@ -215,7 +215,7 @@
 
     doc.appendChild(root);
 
-    return KTProjectRequest(doc.toString(0));
+    return new KTProjectRequest(doc.toString(0));
 }
 
 void KTRequestBuilder::appendData(QDomDocument &doc, QDomElement &element, const QByteArray &data)
@@ -230,9 +230,9 @@
     }
 }
 
-KTProjectRequest KTRequestBuilder::fromResponse(KTProjectResponse *response)
+KTProjectRequest *KTRequestBuilder::fromResponse(KTProjectResponse *response)
 {
-    KTProjectRequest request;
+    KTProjectRequest *request;
 
     switch (response->part()) {
             case KTProjectRequest::Item:
diff -ur ktoon-0.9a-rev1613/src/store/ktrequestbuilder.h ktoon-0.9a-rev1613_new/src/store/ktrequestbuilder.h
--- ktoon-0.9a-rev1613/src/store/ktrequestbuilder.h	2010-08-27 14:53:00.000000000 +0200
+++ ktoon-0.9a-rev1613_new/src/store/ktrequestbuilder.h	2011-08-22 10:28:19.000000000 +0200
@@ -59,17 +59,17 @@
 
         ~KTRequestBuilder();
         
-        static KTProjectRequest createItemRequest(int sceneIndex, int layerIndex, int frameIndex, int itemIndex, QPointF point, KTLibraryObject::Type type, int action, const QVariant &arg = QString(), const QByteArray &data = QByteArray());
+        static KTProjectRequest *createItemRequest(int sceneIndex, int layerIndex, int frameIndex, int itemIndex, QPointF point, KTLibraryObject::Type type, int action, const QVariant &arg = QString(), const QByteArray &data = QByteArray());
         
-        static KTProjectRequest createFrameRequest(int sceneIndex, int layerIndex, int frameIndex, int action, const QVariant &arg= QString(), const QByteArray &data = QByteArray());
+        static KTProjectRequest *createFrameRequest(int sceneIndex, int layerIndex, int frameIndex, int action, const QVariant &arg= QString(), const QByteArray &data = QByteArray());
         
-        static KTProjectRequest createLayerRequest(int sceneIndex, int layerIndex, int action, const QVariant &arg= QString(), const QByteArray &data = QByteArray());
+        static KTProjectRequest *createLayerRequest(int sceneIndex, int layerIndex, int action, const QVariant &arg= QString(), const QByteArray &data = QByteArray());
         
-        static KTProjectRequest createSceneRequest(int sceneIndex, int action, const QVariant &arg= QString(), const QByteArray &data = QByteArray());
+        static KTProjectRequest *createSceneRequest(int sceneIndex, int action, const QVariant &arg= QString(), const QByteArray &data = QByteArray());
         
-        static KTProjectRequest createLibraryRequest(int actionId, const QVariant &arg, KTLibraryObject::Type type, const QByteArray &data, int scene = -1, int layer = -1, int frame = -1);
+        static KTProjectRequest *createLibraryRequest(int actionId, const QVariant &arg, KTLibraryObject::Type type, const QByteArray &data, int scene = -1, int layer = -1, int frame = -1);
         
-        static KTProjectRequest fromResponse(KTProjectResponse *response);
+        static KTProjectRequest *fromResponse(KTProjectResponse *response);
         
     private:
         static void appendData(QDomDocument &doc, QDomElement &element, const QByteArray &data);
Only in ktoon-0.9a-rev1613_new/src/store: Makefile
Only in ktoon-0.9a-rev1613_new/src/themes/default/cursors: libcursors.a
Only in ktoon-0.9a-rev1613_new/src/themes/default/cursors: Makefile
Only in ktoon-0.9a-rev1613_new/src/themes/default/icons: libicons.a
Only in ktoon-0.9a-rev1613_new/src/themes/default/icons: Makefile
Only in ktoon-0.9a-rev1613_new/src/themes/default/images: Makefile
Only in ktoon-0.9a-rev1613_new/src/themes/default: Makefile
Only in ktoon-0.9a-rev1613_new/src/themes: Makefile
